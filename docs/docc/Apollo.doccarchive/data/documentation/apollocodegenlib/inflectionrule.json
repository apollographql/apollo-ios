{
  "abstract" : [
    {
      "text" : "The types of inflection rules that can be used to customize pluralization.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/ApolloCodegenLib\/documentation\/ApolloCodegenLib"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/ApolloCodegenLib\/documentation\/ApolloCodegenLib\/InflectionRule"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:16ApolloCodegenLib14InflectionRuleO",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "enum"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "InflectionRule"
      }
    ],
    "modules" : [
      {
        "name" : "ApolloCodegenLib"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "InflectionRule"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Enumeration",
    "symbolKind" : "enum",
    "title" : "InflectionRule"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "enum"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "InflectionRule"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/ApolloCodegenLib\/Se",
        "doc:\/\/ApolloCodegenLib\/SE",
        "doc:\/\/ApolloCodegenLib\/SQ"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/ApolloCodegenLib\/documentation\/ApolloCodegenLib\/InflectionRule\/irregular(singular:plural:)",
        "doc:\/\/ApolloCodegenLib\/documentation\/ApolloCodegenLib\/InflectionRule\/pluralization(singularRegex:replacementRegex:)",
        "doc:\/\/ApolloCodegenLib\/documentation\/ApolloCodegenLib\/InflectionRule\/singularization(pluralRegex:replacementRegex:)",
        "doc:\/\/ApolloCodegenLib\/documentation\/ApolloCodegenLib\/InflectionRule\/uncountable(word:)"
      ],
      "title" : "Enumeration Cases"
    },
    {
      "identifiers" : [
        "doc:\/\/ApolloCodegenLib\/documentation\/ApolloCodegenLib\/InflectionRule\/init(from:)"
      ],
      "title" : "Initializers"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/ApolloCodegenLib\/documentation\/ApolloCodegenLib\/InflectionRule\/Equatable-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/apollocodegenlib\/inflectionrule"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://ApolloCodegenLib/SE": {
  "identifier" : "doc:\/\/ApolloCodegenLib\/SE",
  "title" : "Swift.Encodable",
  "type" : "unresolvable"
},
"doc://ApolloCodegenLib/SQ": {
  "identifier" : "doc:\/\/ApolloCodegenLib\/SQ",
  "title" : "Swift.Equatable",
  "type" : "unresolvable"
},
"doc://ApolloCodegenLib/Se": {
  "identifier" : "doc:\/\/ApolloCodegenLib\/Se",
  "title" : "Swift.Decodable",
  "type" : "unresolvable"
},
"doc://ApolloCodegenLib/documentation/ApolloCodegenLib": {
  "abstract" : [
    {
      "text" : "A robust code generation engine for GraphQL operations.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/ApolloCodegenLib\/documentation\/ApolloCodegenLib",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ApolloCodegenLib",
  "type" : "topic",
  "url" : "\/documentation\/apollocodegenlib"
},
"doc://ApolloCodegenLib/documentation/ApolloCodegenLib/InflectionRule": {
  "abstract" : [
    {
      "text" : "The types of inflection rules that can be used to customize pluralization.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "InflectionRule"
    }
  ],
  "identifier" : "doc:\/\/ApolloCodegenLib\/documentation\/ApolloCodegenLib\/InflectionRule",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "InflectionRule"
    }
  ],
  "role" : "symbol",
  "title" : "InflectionRule",
  "type" : "topic",
  "url" : "\/documentation\/apollocodegenlib\/inflectionrule"
},
"doc://ApolloCodegenLib/documentation/ApolloCodegenLib/InflectionRule/Equatable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/ApolloCodegenLib\/documentation\/ApolloCodegenLib\/InflectionRule\/Equatable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Equatable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/apollocodegenlib\/inflectionrule\/equatable-implementations"
},
"doc://ApolloCodegenLib/documentation/ApolloCodegenLib/InflectionRule/init(from:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "from"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s7DecoderP",
      "text" : "Decoder"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/ApolloCodegenLib\/documentation\/ApolloCodegenLib\/InflectionRule\/init(from:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(from:)",
  "type" : "topic",
  "url" : "\/documentation\/apollocodegenlib\/inflectionrule\/init(from:)"
},
"doc://ApolloCodegenLib/documentation/ApolloCodegenLib/InflectionRule/irregular(singular:plural:)": {
  "abstract" : [
    {
      "text" : "A definition of an irregular pluralization rule not easily captured by regex - for example “person” and “people”.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "irregular"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "singular"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "plural"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/ApolloCodegenLib\/documentation\/ApolloCodegenLib\/InflectionRule\/irregular(singular:plural:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "InflectionRule.irregular(singular:plural:)",
  "type" : "topic",
  "url" : "\/documentation\/apollocodegenlib\/inflectionrule\/irregular(singular:plural:)"
},
"doc://ApolloCodegenLib/documentation/ApolloCodegenLib/InflectionRule/pluralization(singularRegex:replacementRegex:)": {
  "abstract" : [
    {
      "text" : "A pluralization rule that allows taking a singular word and pluralizing it.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "pluralization"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "singularRegex"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "replacementRegex"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/ApolloCodegenLib\/documentation\/ApolloCodegenLib\/InflectionRule\/pluralization(singularRegex:replacementRegex:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "InflectionRule.pluralization(singularRegex:replacementRegex:)",
  "type" : "topic",
  "url" : "\/documentation\/apollocodegenlib\/inflectionrule\/pluralization(singularregex:replacementregex:)"
},
"doc://ApolloCodegenLib/documentation/ApolloCodegenLib/InflectionRule/singularization(pluralRegex:replacementRegex:)": {
  "abstract" : [
    {
      "text" : "A singularization rule that allows taking a plural word and singularizing it.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "singularization"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "pluralRegex"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "replacementRegex"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/ApolloCodegenLib\/documentation\/ApolloCodegenLib\/InflectionRule\/singularization(pluralRegex:replacementRegex:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "InflectionRule.singularization(pluralRegex:replacementRegex:)",
  "type" : "topic",
  "url" : "\/documentation\/apollocodegenlib\/inflectionrule\/singularization(pluralregex:replacementregex:)"
},
"doc://ApolloCodegenLib/documentation/ApolloCodegenLib/InflectionRule/uncountable(word:)": {
  "abstract" : [
    {
      "text" : "A definition of a word that should never be pluralized or de-pluralized because it’s the same no matter what the count - for example, “fish”.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "uncountable"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "word"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/ApolloCodegenLib\/documentation\/ApolloCodegenLib\/InflectionRule\/uncountable(word:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "InflectionRule.uncountable(word:)",
  "type" : "topic",
  "url" : "\/documentation\/apollocodegenlib\/inflectionrule\/uncountable(word:)"
}
}
}