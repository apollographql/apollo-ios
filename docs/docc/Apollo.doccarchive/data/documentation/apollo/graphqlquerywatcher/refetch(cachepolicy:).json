{
  "abstract" : [
    {
      "text" : "Refetch a query from the server.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Apollo\/documentation\/Apollo",
        "doc:\/\/Apollo\/documentation\/Apollo\/GraphQLQueryWatcher"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Apollo\/documentation\/Apollo\/GraphQLQueryWatcher\/refetch(cachePolicy:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:6Apollo19GraphQLQueryWatcherC7refetch11cachePolicyyAA05CacheG0O_tF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "refetch"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "cachePolicy"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:6Apollo11CachePolicyO",
        "text" : "CachePolicy"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "modules" : [
      {
        "name" : "Apollo"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "refetch(cachePolicy:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "refetch"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "cachePolicy"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/Apollo\/documentation\/Apollo\/CachePolicy",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:6Apollo11CachePolicyO",
              "text" : "CachePolicy"
            },
            {
              "kind" : "text",
              "text" : " = .fetchIgnoringCacheData)"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/apollo\/graphqlquerywatcher\/refetch(cachepolicy:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Apollo/documentation/Apollo": {
  "abstract" : [
    {
      "text" : "A Strongly typed, Swift-first, GraphQL client.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Apollo\/documentation\/Apollo",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Apollo",
  "type" : "topic",
  "url" : "\/documentation\/apollo"
},
"doc://Apollo/documentation/Apollo/CachePolicy": {
  "abstract" : [
    {
      "text" : "A cache policy that specifies whether results should be fetched from the server or loaded from the local cache.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CachePolicy"
    }
  ],
  "identifier" : "doc:\/\/Apollo\/documentation\/Apollo\/CachePolicy",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CachePolicy"
    }
  ],
  "role" : "symbol",
  "title" : "CachePolicy",
  "type" : "topic",
  "url" : "\/documentation\/apollo\/cachepolicy"
},
"doc://Apollo/documentation/Apollo/GraphQLQueryWatcher": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "GraphQLQueryWatcher",
      "type" : "codeVoice"
    },
    {
      "text" : " is responsible for watching the store, and calling the result handler with a new result whenever any of the data the previous result depends on changes.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "GraphQLQueryWatcher"
    }
  ],
  "identifier" : "doc:\/\/Apollo\/documentation\/Apollo\/GraphQLQueryWatcher",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "GraphQLQueryWatcher"
    }
  ],
  "role" : "symbol",
  "title" : "GraphQLQueryWatcher",
  "type" : "topic",
  "url" : "\/documentation\/apollo\/graphqlquerywatcher"
},
"doc://Apollo/documentation/Apollo/GraphQLQueryWatcher/refetch(cachePolicy:)": {
  "abstract" : [
    {
      "text" : "Refetch a query from the server.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "refetch"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "cachePolicy"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Apollo11CachePolicyO",
      "text" : "CachePolicy"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Apollo\/documentation\/Apollo\/GraphQLQueryWatcher\/refetch(cachePolicy:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "refetch(cachePolicy:)",
  "type" : "topic",
  "url" : "\/documentation\/apollo\/graphqlquerywatcher\/refetch(cachepolicy:)"
}
}
}