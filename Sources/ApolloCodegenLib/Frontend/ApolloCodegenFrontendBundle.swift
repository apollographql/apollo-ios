let ApolloCodegenFrontendBundle: String = #"var ApolloCodegenFrontend=function(e){"use strict";function t(e){return"object"==typeof e&&null!==e}function n(e,t){if(!e)throw new Error(null!=t?t:"Unexpected invariant triggered.")}const r=/\r\n|[\n\r]/g;function i(e,t){let i=0,o=1;for(const s of e.body.matchAll(r)){if("number"==typeof s.index||n(!1),s.index>=t)break;i=s.index+s[0].length,o+=1}return{line:o,column:t+1-i}}function o(e,t){const n=e.locationOffset.column-1,r="".padStart(n)+e.body,i=t.line-1,o=e.locationOffset.line-1,a=t.line+o,c=1===t.line?n:0,u=t.column+c,l=`${e.name}:${a}:${u}\n`,p=r.split(/\r\n|[\n\r]/g),d=p[i];if(d.length>120){const e=Math.floor(u/80),t=u%80,n=[];for(let e=0;e<d.length;e+=80)n.push(d.slice(e,e+80));return l+s([[`${a} |`,n[0]],...n.slice(1,e+1).map((e=>["|",e])),["|","^".padStart(t)],["|",n[e+1]]])}return l+s([[a-1+" |",p[i-1]],[`${a} |`,d],["|","^".padStart(u)],[`${a+1} |`,p[i+1]]])}function s(e){const t=e.filter((([e,t])=>void 0!==t)),n=Math.max(...t.map((([e])=>e.length)));return t.map((([e,t])=>e.padStart(n)+(t?" "+t:""))).join("\n")}class GraphQLError extends Error{constructor(e,n={}){const{nodes:r,source:o,positions:s,path:c,originalError:u,extensions:l}=n;super(e),this.name="GraphQLError",this.path=c??void 0,this.originalError=u??void 0,this.nodes=a(Array.isArray(r)?r:r?[r]:void 0);const p=a(this.nodes?.map((e=>e.loc)).filter((e=>null!=e)));this.source=o??p?.[0]?.source,this.positions=s??p?.map((e=>e.start)),this.locations=s&&o?s.map((e=>i(o,e))):p?.map((e=>i(e.source,e.start)));const d=t(u?.extensions)?u?.extensions:void 0;this.extensions=l??d??Object.create(null),Object.defineProperties(this,{message:{writable:!0,enumerable:!0},name:{enumerable:!1},nodes:{enumerable:!1},source:{enumerable:!1},positions:{enumerable:!1},originalError:{enumerable:!1}}),u?.stack?Object.defineProperty(this,"stack",{value:u.stack,writable:!0,configurable:!0}):Error.captureStackTrace?Error.captureStackTrace(this,GraphQLError):Object.defineProperty(this,"stack",{value:Error().stack,writable:!0,configurable:!0})}get[Symbol.toStringTag](){return"GraphQLError"}toString(){let e=this.message;if(this.nodes)for(const n of this.nodes)n.loc&&(e+="\n\n"+o((t=n.loc).source,i(t.source,t.start)));else if(this.source&&this.locations)for(const t of this.locations)e+="\n\n"+o(this.source,t);var t;return e}toJSON(){const e={message:this.message};return null!=this.locations&&(e.locations=this.locations),null!=this.path&&(e.path=this.path),null!=this.extensions&&Object.keys(this.extensions).length>0&&(e.extensions=this.extensions),e}}function a(e){return void 0===e||0===e.length?void 0:e}function c(e,t,n){return new GraphQLError(`Syntax Error: ${n}`,{source:e,positions:[t]})}class Location{constructor(e,t,n){this.start=e.start,this.end=t.end,this.startToken=e,this.endToken=t,this.source=n}get[Symbol.toStringTag](){return"Location"}toJSON(){return{start:this.start,end:this.end}}}class Token{constructor(e,t,n,r,i,o){this.kind=e,this.start=t,this.end=n,this.line=r,this.column=i,this.value=o,this.prev=null,this.next=null}get[Symbol.toStringTag](){return"Token"}toJSON(){return{kind:this.kind,value:this.value,line:this.line,column:this.column}}}const u={Name:[],Document:["definitions"],OperationDefinition:["name","variableDefinitions","directives","selectionSet"],VariableDefinition:["variable","type","defaultValue","directives"],Variable:["name"],SelectionSet:["selections"],Field:["alias","name","arguments","directives","selectionSet","nullabilityAssertion"],Argument:["name","value"],ListNullabilityOperator:["nullabilityAssertion"],NonNullAssertion:["nullabilityAssertion"],ErrorBoundary:["nullabilityAssertion"],FragmentSpread:["name","directives"],InlineFragment:["typeCondition","directives","selectionSet"],FragmentDefinition:["name","variableDefinitions","typeCondition","directives","selectionSet"],IntValue:[],FloatValue:[],StringValue:[],BooleanValue:[],NullValue:[],EnumValue:[],ListValue:["values"],ObjectValue:["fields"],ObjectField:["name","value"],Directive:["name","arguments"],NamedType:["name"],ListType:["type"],NonNullType:["type"],SchemaDefinition:["description","directives","operationTypes"],OperationTypeDefinition:["type"],ScalarTypeDefinition:["description","name","directives"],ObjectTypeDefinition:["description","name","interfaces","directives","fields"],FieldDefinition:["description","name","arguments","type","directives"],InputValueDefinition:["description","name","type","defaultValue","directives"],InterfaceTypeDefinition:["description","name","interfaces","directives","fields"],UnionTypeDefinition:["description","name","directives","types"],EnumTypeDefinition:["description","name","directives","values"],EnumValueDefinition:["description","name","directives"],InputObjectTypeDefinition:["description","name","directives","fields"],DirectiveDefinition:["description","name","arguments","locations"],SchemaExtension:["directives","operationTypes"],ScalarTypeExtension:["name","directives"],ObjectTypeExtension:["name","interfaces","directives","fields"],InterfaceTypeExtension:["name","interfaces","directives","fields"],UnionTypeExtension:["name","directives","types"],EnumTypeExtension:["name","directives","values"],InputObjectTypeExtension:["name","directives","fields"]},l=new Set(Object.keys(u));function p(e){const t=e?.kind;return"string"==typeof t&&l.has(t)}var d,f,h,m;function E(e){return 9===e||32===e}function T(e){return e>=48&&e<=57}function y(e){return e>=97&&e<=122||e>=65&&e<=90}function N(e){return y(e)||95===e}function v(e){return y(e)||T(e)||95===e}function I(e){let t=Number.MAX_SAFE_INTEGER,n=null,r=-1;for(let i=0;i<e.length;++i){const o=e[i],s=g(o);s!==o.length&&(n=n??i,r=i,0!==i&&s<t&&(t=s))}return e.map(((e,n)=>0===n?e:e.slice(t))).slice(n??0,r+1)}function g(e){let t=0;for(;t<e.length&&E(e.charCodeAt(t));)++t;return t}function _(e){if(""===e)return!0;let t=!0,n=!1,r=!0,i=!1;for(let o=0;o<e.length;++o)switch(e.codePointAt(o)){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 11:case 12:case 14:case 15:case 13:return!1;case 10:if(t&&!i)return!1;i=!0,t=!0,n=!1;break;case 9:case 32:n||(n=t);break;default:r&&(r=n),t=!1}return!t&&(!r||!i)}!function(e){e.QUERY="query",e.MUTATION="mutation",e.SUBSCRIPTION="subscription"}(d||(d={})),function(e){e.QUERY="QUERY",e.MUTATION="MUTATION",e.SUBSCRIPTION="SUBSCRIPTION",e.FIELD="FIELD",e.FRAGMENT_DEFINITION="FRAGMENT_DEFINITION",e.FRAGMENT_SPREAD="FRAGMENT_SPREAD",e.INLINE_FRAGMENT="INLINE_FRAGMENT",e.VARIABLE_DEFINITION="VARIABLE_DEFINITION",e.SCHEMA="SCHEMA",e.SCALAR="SCALAR",e.OBJECT="OBJECT",e.FIELD_DEFINITION="FIELD_DEFINITION",e.ARGUMENT_DEFINITION="ARGUMENT_DEFINITION",e.INTERFACE="INTERFACE",e.UNION="UNION",e.ENUM="ENUM",e.ENUM_VALUE="ENUM_VALUE",e.INPUT_OBJECT="INPUT_OBJECT",e.INPUT_FIELD_DEFINITION="INPUT_FIELD_DEFINITION"}(f||(f={})),function(e){e.NAME="Name",e.DOCUMENT="Document",e.OPERATION_DEFINITION="OperationDefinition",e.VARIABLE_DEFINITION="VariableDefinition",e.SELECTION_SET="SelectionSet",e.FIELD="Field",e.ARGUMENT="Argument",e.LIST_NULLABILITY_OPERATOR="ListNullabilityOperator",e.NON_NULL_ASSERTION="NonNullAssertion",e.ERROR_BOUNDARY="ErrorBoundary",e.FRAGMENT_SPREAD="FragmentSpread",e.INLINE_FRAGMENT="InlineFragment",e.FRAGMENT_DEFINITION="FragmentDefinition",e.VARIABLE="Variable",e.INT="IntValue",e.FLOAT="FloatValue",e.STRING="StringValue",e.BOOLEAN="BooleanValue",e.NULL="NullValue",e.ENUM="EnumValue",e.LIST="ListValue",e.OBJECT="ObjectValue",e.OBJECT_FIELD="ObjectField",e.DIRECTIVE="Directive",e.NAMED_TYPE="NamedType",e.LIST_TYPE="ListType",e.NON_NULL_TYPE="NonNullType",e.SCHEMA_DEFINITION="SchemaDefinition",e.OPERATION_TYPE_DEFINITION="OperationTypeDefinition",e.SCALAR_TYPE_DEFINITION="ScalarTypeDefinition",e.OBJECT_TYPE_DEFINITION="ObjectTypeDefinition",e.FIELD_DEFINITION="FieldDefinition",e.INPUT_VALUE_DEFINITION="InputValueDefinition",e.INTERFACE_TYPE_DEFINITION="InterfaceTypeDefinition",e.UNION_TYPE_DEFINITION="UnionTypeDefinition",e.ENUM_TYPE_DEFINITION="EnumTypeDefinition",e.ENUM_VALUE_DEFINITION="EnumValueDefinition",e.INPUT_OBJECT_TYPE_DEFINITION="InputObjectTypeDefinition",e.DIRECTIVE_DEFINITION="DirectiveDefinition",e.SCHEMA_EXTENSION="SchemaExtension",e.SCALAR_TYPE_EXTENSION="ScalarTypeExtension",e.OBJECT_TYPE_EXTENSION="ObjectTypeExtension",e.INTERFACE_TYPE_EXTENSION="InterfaceTypeExtension",e.UNION_TYPE_EXTENSION="UnionTypeExtension",e.ENUM_TYPE_EXTENSION="EnumTypeExtension",e.INPUT_OBJECT_TYPE_EXTENSION="InputObjectTypeExtension"}(h||(h={})),function(e){e.SOF="<SOF>",e.EOF="<EOF>",e.BANG="!",e.QUESTION_MARK="?",e.DOLLAR="$",e.AMP="&",e.PAREN_L="(",e.PAREN_R=")",e.SPREAD="...",e.COLON=":",e.EQUALS="=",e.AT="@",e.BRACKET_L="[",e.BRACKET_R="]",e.BRACE_L="{",e.PIPE="|",e.BRACE_R="}",e.NAME="Name",e.INT="Int",e.FLOAT="Float",e.STRING="String",e.BLOCK_STRING="BlockString",e.COMMENT="Comment"}(m||(m={}));class Lexer{constructor(e){const t=new Token(m.SOF,0,0,0,0);this.source=e,this.lastToken=t,this.token=t,this.line=1,this.lineStart=0}get[Symbol.toStringTag](){return"Lexer"}advance(){this.lastToken=this.token;return this.token=this.lookahead()}lookahead(){let e=this.token;if(e.kind!==m.EOF)do{if(e.next)e=e.next;else{const t=w(this,e.end);e.next=t,t.prev=e,e=t}}while(e.kind===m.COMMENT);return e}}function S(e){return e>=0&&e<=55295||e>=57344&&e<=1114111}function O(e,t){return b(e.charCodeAt(t))&&L(e.charCodeAt(t+1))}function b(e){return e>=55296&&e<=56319}function L(e){return e>=56320&&e<=57343}function A(e,t){const n=e.source.body.codePointAt(t);if(void 0===n)return m.EOF;if(n>=32&&n<=126){const e=String.fromCodePoint(n);return'"'===e?"'\"'":`"${e}"`}return"U+"+n.toString(16).toUpperCase().padStart(4,"0")}function D(e,t,n,r,i){const o=e.line,s=1+n-e.lineStart;return new Token(t,n,r,o,s,i)}function w(e,t){const n=e.source.body,r=n.length;let i=t;for(;i<r;){const t=n.charCodeAt(i);switch(t){case 65279:case 9:case 32:case 44:++i;continue;case 10:++i,++e.line,e.lineStart=i;continue;case 13:10===n.charCodeAt(i+1)?i+=2:++i,++e.line,e.lineStart=i;continue;case 35:return k(e,i);case 33:return D(e,m.BANG,i,i+1);case 36:return D(e,m.DOLLAR,i,i+1);case 38:return D(e,m.AMP,i,i+1);case 40:return D(e,m.PAREN_L,i,i+1);case 41:return D(e,m.PAREN_R,i,i+1);case 46:if(46===n.charCodeAt(i+1)&&46===n.charCodeAt(i+2))return D(e,m.SPREAD,i,i+3);break;case 58:return D(e,m.COLON,i,i+1);case 61:return D(e,m.EQUALS,i,i+1);case 64:return D(e,m.AT,i,i+1);case 91:return D(e,m.BRACKET_L,i,i+1);case 93:return D(e,m.BRACKET_R,i,i+1);case 123:return D(e,m.BRACE_L,i,i+1);case 124:return D(e,m.PIPE,i,i+1);case 125:return D(e,m.BRACE_R,i,i+1);case 63:return D(e,m.QUESTION_MARK,i,i+1);case 34:return 34===n.charCodeAt(i+1)&&34===n.charCodeAt(i+2)?V(e,i):R(e,i)}if(T(t)||45===t)return x(e,i,t);if(N(t))return P(e,i);throw c(e.source,i,39===t?"Unexpected single quote character ('), did you mean to use a double quote (\")?":S(t)||O(n,i)?`Unexpected character: ${A(e,i)}.`:`Invalid character: ${A(e,i)}.`)}return D(e,m.EOF,r,r)}function k(e,t){const n=e.source.body,r=n.length;let i=t+1;for(;i<r;){const e=n.charCodeAt(i);if(10===e||13===e)break;if(S(e))++i;else{if(!O(n,i))break;i+=2}}return D(e,m.COMMENT,t,i,n.slice(t+1,i))}function x(e,t,n){const r=e.source.body;let i=t,o=n,s=!1;if(45===o&&(o=r.charCodeAt(++i)),48===o){if(o=r.charCodeAt(++i),T(o))throw c(e.source,i,`Invalid number, unexpected digit after 0: ${A(e,i)}.`)}else i=F(e,i,o),o=r.charCodeAt(i);if(46===o&&(s=!0,o=r.charCodeAt(++i),i=F(e,i,o),o=r.charCodeAt(i)),69!==o&&101!==o||(s=!0,o=r.charCodeAt(++i),43!==o&&45!==o||(o=r.charCodeAt(++i)),i=F(e,i,o),o=r.charCodeAt(i)),46===o||N(o))throw c(e.source,i,`Invalid number, expected digit but got: ${A(e,i)}.`);return D(e,s?m.FLOAT:m.INT,t,i,r.slice(t,i))}function F(e,t,n){if(!T(n))throw c(e.source,t,`Invalid number, expected digit but got: ${A(e,t)}.`);const r=e.source.body;let i=t+1;for(;T(r.charCodeAt(i));)++i;return i}function R(e,t){const n=e.source.body,r=n.length;let i=t+1,o=i,s="";for(;i<r;){const r=n.charCodeAt(i);if(34===r)return s+=n.slice(o,i),D(e,m.STRING,t,i+1,s);if(92!==r){if(10===r||13===r)break;if(S(r))++i;else{if(!O(n,i))throw c(e.source,i,`Invalid character within String: ${A(e,i)}.`);i+=2}}else{s+=n.slice(o,i);const t=117===n.charCodeAt(i+1)?123===n.charCodeAt(i+2)?C(e,i):G(e,i):U(e,i);s+=t.value,i+=t.size,o=i}}throw c(e.source,i,"Unterminated string.")}function C(e,t){const n=e.source.body;let r=0,i=3;for(;i<12;){const e=n.charCodeAt(t+i++);if(125===e){if(i<5||!S(r))break;return{value:String.fromCodePoint(r),size:i}}if(r=r<<4|Q(e),r<0)break}throw c(e.source,t,`Invalid Unicode escape sequence: "${n.slice(t,t+i)}".`)}function G(e,t){const n=e.source.body,r=$(n,t+2);if(S(r))return{value:String.fromCodePoint(r),size:6};if(b(r)&&92===n.charCodeAt(t+6)&&117===n.charCodeAt(t+7)){const e=$(n,t+8);if(L(e))return{value:String.fromCodePoint(r,e),size:12}}throw c(e.source,t,`Invalid Unicode escape sequence: "${n.slice(t,t+6)}".`)}function $(e,t){return Q(e.charCodeAt(t))<<12|Q(e.charCodeAt(t+1))<<8|Q(e.charCodeAt(t+2))<<4|Q(e.charCodeAt(t+3))}function Q(e){return e>=48&&e<=57?e-48:e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:-1}function U(e,t){const n=e.source.body;switch(n.charCodeAt(t+1)){case 34:return{value:'"',size:2};case 92:return{value:"\\",size:2};case 47:return{value:"/",size:2};case 98:return{value:"\b",size:2};case 102:return{value:"\f",size:2};case 110:return{value:"\n",size:2};case 114:return{value:"\r",size:2};case 116:return{value:"\t",size:2}}throw c(e.source,t,`Invalid character escape sequence: "${n.slice(t,t+2)}".`)}function V(e,t){const n=e.source.body,r=n.length;let i=e.lineStart,o=t+3,s=o,a="";const u=[];for(;o<r;){const r=n.charCodeAt(o);if(34===r&&34===n.charCodeAt(o+1)&&34===n.charCodeAt(o+2)){a+=n.slice(s,o),u.push(a);const r=D(e,m.BLOCK_STRING,t,o+3,I(u).join("\n"));return e.line+=u.length-1,e.lineStart=i,r}if(92!==r||34!==n.charCodeAt(o+1)||34!==n.charCodeAt(o+2)||34!==n.charCodeAt(o+3))if(10!==r&&13!==r)if(S(r))++o;else{if(!O(n,o))throw c(e.source,o,`Invalid character within String: ${A(e,o)}.`);o+=2}else a+=n.slice(s,o),u.push(a),13===r&&10===n.charCodeAt(o+1)?o+=2:++o,a="",s=o,i=o;else a+=n.slice(s,o),s=o+1,o+=4}throw c(e.source,o,"Unterminated string.")}function P(e,t){const n=e.source.body,r=n.length;let i=t+1;for(;i<r;){if(!v(n.charCodeAt(i)))break;++i}return D(e,m.NAME,t,i,n.slice(t,i))}function M(e,t){if(!e)throw new Error(t)}function j(e){return B(e,[])}function B(e,t){switch(typeof e){case"string":return JSON.stringify(e);case"function":return e.name?`[function ${e.name}]`:"[function]";case"object":return function(e,t){if(null===e)return"null";if(t.includes(e))return"[Circular]";const n=[...t,e];if(function(e){return"function"==typeof e.toJSON}(e)){const t=e.toJSON();if(t!==e)return"string"==typeof t?t:B(t,n)}else if(Array.isArray(e))return function(e,t){if(0===e.length)return"[]";if(t.length>2)return"[Array]";const n=Math.min(10,e.length),r=e.length-n,i=[];for(let r=0;r<n;++r)i.push(B(e[r],t));1===r?i.push("... 1 more item"):r>1&&i.push(`... ${r} more items`);return"["+i.join(", ")+"]"}(e,n);return function(e,t){const n=Object.entries(e);if(0===n.length)return"{}";if(t.length>2)return"["+function(e){const t=Object.prototype.toString.call(e).replace(/^\[object /,"").replace(/]$/,"");if("Object"===t&&"function"==typeof e.constructor){const t=e.constructor.name;if("string"==typeof t&&""!==t)return t}return t}(e)+"]";return"{ "+n.map((([e,n])=>e+": "+B(n,t))).join(", ")+" }"}(e,n)}(e,t);default:return String(e)}}const Y="production"===globalThis.process?.env.NODE_ENV?function(e,t){return e instanceof t}:function(e,t){if(e instanceof t)return!0;if("object"==typeof e&&null!==e){const n=t.prototype[Symbol.toStringTag];if(n===(Symbol.toStringTag in e?e[Symbol.toStringTag]:e.constructor?.name)){const t=j(e);throw new Error(`Cannot use ${n} "${t}" from another module or realm.\n\nEnsure that there is only one instance of "graphql" in the node_modules\ndirectory. If different versions of "graphql" are the dependencies of other\nrelied on modules, use "resolutions" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate "graphql" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`)}}return!1};class Source{constructor(e,t="GraphQL request",n={line:1,column:1}){this.body=e,this.name=t,this.locationOffset=n,this.locationOffset.line>0||M(!1,"line in locationOffset is 1-indexed and must be positive."),this.locationOffset.column>0||M(!1,"column in locationOffset is 1-indexed and must be positive.")}get[Symbol.toStringTag](){return"Source"}}function J(e,t){return new Parser(e,t).parseDocument()}class Parser{constructor(e,t={}){const n=function(e){return Y(e,Source)}(e)?e:new Source(e);this._lexer=new Lexer(n),this._options=t,this._tokenCounter=0}parseName(){const e=this.expectToken(m.NAME);return this.node(e,{kind:h.NAME,value:e.value})}parseDocument(){return this.node(this._lexer.token,{kind:h.DOCUMENT,definitions:this.many(m.SOF,this.parseDefinition,m.EOF)})}parseDefinition(){if(this.peek(m.BRACE_L))return this.parseOperationDefinition();const e=this.peekDescription(),t=e?this._lexer.lookahead():this._lexer.token;if(t.kind===m.NAME){switch(t.value){case"schema":return this.parseSchemaDefinition();case"scalar":return this.parseScalarTypeDefinition();case"type":return this.parseObjectTypeDefinition();case"interface":return this.parseInterfaceTypeDefinition();case"union":return this.parseUnionTypeDefinition();case"enum":return this.parseEnumTypeDefinition();case"input":return this.parseInputObjectTypeDefinition();case"directive":return this.parseDirectiveDefinition()}if(e)throw c(this._lexer.source,this._lexer.token.start,"Unexpected description, descriptions are supported only on type definitions.");switch(t.value){case"query":case"mutation":case"subscription":return this.parseOperationDefinition();case"fragment":return this.parseFragmentDefinition();case"extend":return this.parseTypeSystemExtension()}}throw this.unexpected(t)}parseOperationDefinition(){const e=this._lexer.token;if(this.peek(m.BRACE_L))return this.node(e,{kind:h.OPERATION_DEFINITION,operation:d.QUERY,name:void 0,variableDefinitions:[],directives:[],selectionSet:this.parseSelectionSet()});const t=this.parseOperationType();let n;return this.peek(m.NAME)&&(n=this.parseName()),this.node(e,{kind:h.OPERATION_DEFINITION,operation:t,name:n,variableDefinitions:this.parseVariableDefinitions(),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseOperationType(){const e=this.expectToken(m.NAME);switch(e.value){case"query":return d.QUERY;case"mutation":return d.MUTATION;case"subscription":return d.SUBSCRIPTION}throw this.unexpected(e)}parseVariableDefinitions(){return this.optionalMany(m.PAREN_L,this.parseVariableDefinition,m.PAREN_R)}parseVariableDefinition(){return this.node(this._lexer.token,{kind:h.VARIABLE_DEFINITION,variable:this.parseVariable(),type:(this.expectToken(m.COLON),this.parseTypeReference()),defaultValue:this.expectOptionalToken(m.EQUALS)?this.parseConstValueLiteral():void 0,directives:this.parseConstDirectives()})}parseVariable(){const e=this._lexer.token;return this.expectToken(m.DOLLAR),this.node(e,{kind:h.VARIABLE,name:this.parseName()})}parseSelectionSet(){return this.node(this._lexer.token,{kind:h.SELECTION_SET,selections:this.many(m.BRACE_L,this.parseSelection,m.BRACE_R)})}parseSelection(){return this.peek(m.SPREAD)?this.parseFragment():this.parseField()}parseField(){const e=this._lexer.token,t=this.parseName();let n,r;return this.expectOptionalToken(m.COLON)?(n=t,r=this.parseName()):r=t,this.node(e,{kind:h.FIELD,alias:n,name:r,arguments:this.parseArguments(!1),nullabilityAssertion:this.parseNullabilityAssertion(),directives:this.parseDirectives(!1),selectionSet:this.peek(m.BRACE_L)?this.parseSelectionSet():void 0})}parseNullabilityAssertion(){if(!0!==this._options.experimentalClientControlledNullability)return;const e=this._lexer.token;let t;if(this.expectOptionalToken(m.BRACKET_L)){const n=this.parseNullabilityAssertion();this.expectToken(m.BRACKET_R),t=this.node(e,{kind:h.LIST_NULLABILITY_OPERATOR,nullabilityAssertion:n})}return this.expectOptionalToken(m.BANG)?t=this.node(e,{kind:h.NON_NULL_ASSERTION,nullabilityAssertion:t}):this.expectOptionalToken(m.QUESTION_MARK)&&(t=this.node(e,{kind:h.ERROR_BOUNDARY,nullabilityAssertion:t})),t}parseArguments(e){const t=e?this.parseConstArgument:this.parseArgument;return this.optionalMany(m.PAREN_L,t,m.PAREN_R)}parseArgument(e=!1){const t=this._lexer.token,n=this.parseName();return this.expectToken(m.COLON),this.node(t,{kind:h.ARGUMENT,name:n,value:this.parseValueLiteral(e)})}parseConstArgument(){return this.parseArgument(!0)}parseFragment(){const e=this._lexer.token;this.expectToken(m.SPREAD);const t=this.expectOptionalKeyword("on");return!t&&this.peek(m.NAME)?this.node(e,{kind:h.FRAGMENT_SPREAD,name:this.parseFragmentName(),directives:this.parseDirectives(!1)}):this.node(e,{kind:h.INLINE_FRAGMENT,typeCondition:t?this.parseNamedType():void 0,directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseFragmentDefinition(){const e=this._lexer.token;return this.expectKeyword("fragment"),!0===this._options.allowLegacyFragmentVariables?this.node(e,{kind:h.FRAGMENT_DEFINITION,name:this.parseFragmentName(),variableDefinitions:this.parseVariableDefinitions(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()}):this.node(e,{kind:h.FRAGMENT_DEFINITION,name:this.parseFragmentName(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseFragmentName(){if("on"===this._lexer.token.value)throw this.unexpected();return this.parseName()}parseValueLiteral(e){const t=this._lexer.token;switch(t.kind){case m.BRACKET_L:return this.parseList(e);case m.BRACE_L:return this.parseObject(e);case m.INT:return this.advanceLexer(),this.node(t,{kind:h.INT,value:t.value});case m.FLOAT:return this.advanceLexer(),this.node(t,{kind:h.FLOAT,value:t.value});case m.STRING:case m.BLOCK_STRING:return this.parseStringLiteral();case m.NAME:switch(this.advanceLexer(),t.value){case"true":return this.node(t,{kind:h.BOOLEAN,value:!0});case"false":return this.node(t,{kind:h.BOOLEAN,value:!1});case"null":return this.node(t,{kind:h.NULL});default:return this.node(t,{kind:h.ENUM,value:t.value})}case m.DOLLAR:if(e){if(this.expectToken(m.DOLLAR),this._lexer.token.kind===m.NAME){const e=this._lexer.token.value;throw c(this._lexer.source,t.start,`Unexpected variable "$${e}" in constant value.`)}throw this.unexpected(t)}return this.parseVariable();default:throw this.unexpected()}}parseConstValueLiteral(){return this.parseValueLiteral(!0)}parseStringLiteral(){const e=this._lexer.token;return this.advanceLexer(),this.node(e,{kind:h.STRING,value:e.value,block:e.kind===m.BLOCK_STRING})}parseList(e){return this.node(this._lexer.token,{kind:h.LIST,values:this.any(m.BRACKET_L,(()=>this.parseValueLiteral(e)),m.BRACKET_R)})}parseObject(e){return this.node(this._lexer.token,{kind:h.OBJECT,fields:this.any(m.BRACE_L,(()=>this.parseObjectField(e)),m.BRACE_R)})}parseObjectField(e){const t=this._lexer.token,n=this.parseName();return this.expectToken(m.COLON),this.node(t,{kind:h.OBJECT_FIELD,name:n,value:this.parseValueLiteral(e)})}parseDirectives(e){const t=[];for(;this.peek(m.AT);)t.push(this.parseDirective(e));return t}parseConstDirectives(){return this.parseDirectives(!0)}parseDirective(e){const t=this._lexer.token;return this.expectToken(m.AT),this.node(t,{kind:h.DIRECTIVE,name:this.parseName(),arguments:this.parseArguments(e)})}parseTypeReference(){const e=this._lexer.token;let t;if(this.expectOptionalToken(m.BRACKET_L)){const n=this.parseTypeReference();this.expectToken(m.BRACKET_R),t=this.node(e,{kind:h.LIST_TYPE,type:n})}else t=this.parseNamedType();return this.expectOptionalToken(m.BANG)?this.node(e,{kind:h.NON_NULL_TYPE,type:t}):t}parseNamedType(){return this.node(this._lexer.token,{kind:h.NAMED_TYPE,name:this.parseName()})}peekDescription(){return this.peek(m.STRING)||this.peek(m.BLOCK_STRING)}parseDescription(){if(this.peekDescription())return this.parseStringLiteral()}parseSchemaDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("schema");const n=this.parseConstDirectives(),r=this.many(m.BRACE_L,this.parseOperationTypeDefinition,m.BRACE_R);return this.node(e,{kind:h.SCHEMA_DEFINITION,description:t,directives:n,operationTypes:r})}parseOperationTypeDefinition(){const e=this._lexer.token,t=this.parseOperationType();this.expectToken(m.COLON);const n=this.parseNamedType();return this.node(e,{kind:h.OPERATION_TYPE_DEFINITION,operation:t,type:n})}parseScalarTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("scalar");const n=this.parseName(),r=this.parseConstDirectives();return this.node(e,{kind:h.SCALAR_TYPE_DEFINITION,description:t,name:n,directives:r})}parseObjectTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("type");const n=this.parseName(),r=this.parseImplementsInterfaces(),i=this.parseConstDirectives(),o=this.parseFieldsDefinition();return this.node(e,{kind:h.OBJECT_TYPE_DEFINITION,description:t,name:n,interfaces:r,directives:i,fields:o})}parseImplementsInterfaces(){return this.expectOptionalKeyword("implements")?this.delimitedMany(m.AMP,this.parseNamedType):[]}parseFieldsDefinition(){return this.optionalMany(m.BRACE_L,this.parseFieldDefinition,m.BRACE_R)}parseFieldDefinition(){const e=this._lexer.token,t=this.parseDescription(),n=this.parseName(),r=this.parseArgumentDefs();this.expectToken(m.COLON);const i=this.parseTypeReference(),o=this.parseConstDirectives();return this.node(e,{kind:h.FIELD_DEFINITION,description:t,name:n,arguments:r,type:i,directives:o})}parseArgumentDefs(){return this.optionalMany(m.PAREN_L,this.parseInputValueDef,m.PAREN_R)}parseInputValueDef(){const e=this._lexer.token,t=this.parseDescription(),n=this.parseName();this.expectToken(m.COLON);const r=this.parseTypeReference();let i;this.expectOptionalToken(m.EQUALS)&&(i=this.parseConstValueLiteral());const o=this.parseConstDirectives();return this.node(e,{kind:h.INPUT_VALUE_DEFINITION,description:t,name:n,type:r,defaultValue:i,directives:o})}parseInterfaceTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("interface");const n=this.parseName(),r=this.parseImplementsInterfaces(),i=this.parseConstDirectives(),o=this.parseFieldsDefinition();return this.node(e,{kind:h.INTERFACE_TYPE_DEFINITION,description:t,name:n,interfaces:r,directives:i,fields:o})}parseUnionTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("union");const n=this.parseName(),r=this.parseConstDirectives(),i=this.parseUnionMemberTypes();return this.node(e,{kind:h.UNION_TYPE_DEFINITION,description:t,name:n,directives:r,types:i})}parseUnionMemberTypes(){return this.expectOptionalToken(m.EQUALS)?this.delimitedMany(m.PIPE,this.parseNamedType):[]}parseEnumTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("enum");const n=this.parseName(),r=this.parseConstDirectives(),i=this.parseEnumValuesDefinition();return this.node(e,{kind:h.ENUM_TYPE_DEFINITION,description:t,name:n,directives:r,values:i})}parseEnumValuesDefinition(){return this.optionalMany(m.BRACE_L,this.parseEnumValueDefinition,m.BRACE_R)}parseEnumValueDefinition(){const e=this._lexer.token,t=this.parseDescription(),n=this.parseEnumValueName(),r=this.parseConstDirectives();return this.node(e,{kind:h.ENUM_VALUE_DEFINITION,description:t,name:n,directives:r})}parseEnumValueName(){if("true"===this._lexer.token.value||"false"===this._lexer.token.value||"null"===this._lexer.token.value)throw c(this._lexer.source,this._lexer.token.start,`${q(this._lexer.token)} is reserved and cannot be used for an enum value.`);return this.parseName()}parseInputObjectTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("input");const n=this.parseName(),r=this.parseConstDirectives(),i=this.parseInputFieldsDefinition();return this.node(e,{kind:h.INPUT_OBJECT_TYPE_DEFINITION,description:t,name:n,directives:r,fields:i})}parseInputFieldsDefinition(){return this.optionalMany(m.BRACE_L,this.parseInputValueDef,m.BRACE_R)}parseTypeSystemExtension(){const e=this._lexer.lookahead();if(e.kind===m.NAME)switch(e.value){case"schema":return this.parseSchemaExtension();case"scalar":return this.parseScalarTypeExtension();case"type":return this.parseObjectTypeExtension();case"interface":return this.parseInterfaceTypeExtension();case"union":return this.parseUnionTypeExtension();case"enum":return this.parseEnumTypeExtension();case"input":return this.parseInputObjectTypeExtension()}throw this.unexpected(e)}parseSchemaExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("schema");const t=this.parseConstDirectives(),n=this.optionalMany(m.BRACE_L,this.parseOperationTypeDefinition,m.BRACE_R);if(0===t.length&&0===n.length)throw this.unexpected();return this.node(e,{kind:h.SCHEMA_EXTENSION,directives:t,operationTypes:n})}parseScalarTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("scalar");const t=this.parseName(),n=this.parseConstDirectives();if(0===n.length)throw this.unexpected();return this.node(e,{kind:h.SCALAR_TYPE_EXTENSION,name:t,directives:n})}parseObjectTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("type");const t=this.parseName(),n=this.parseImplementsInterfaces(),r=this.parseConstDirectives(),i=this.parseFieldsDefinition();if(0===n.length&&0===r.length&&0===i.length)throw this.unexpected();return this.node(e,{kind:h.OBJECT_TYPE_EXTENSION,name:t,interfaces:n,directives:r,fields:i})}parseInterfaceTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("interface");const t=this.parseName(),n=this.parseImplementsInterfaces(),r=this.parseConstDirectives(),i=this.parseFieldsDefinition();if(0===n.length&&0===r.length&&0===i.length)throw this.unexpected();return this.node(e,{kind:h.INTERFACE_TYPE_EXTENSION,name:t,interfaces:n,directives:r,fields:i})}parseUnionTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("union");const t=this.parseName(),n=this.parseConstDirectives(),r=this.parseUnionMemberTypes();if(0===n.length&&0===r.length)throw this.unexpected();return this.node(e,{kind:h.UNION_TYPE_EXTENSION,name:t,directives:n,types:r})}parseEnumTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("enum");const t=this.parseName(),n=this.parseConstDirectives(),r=this.parseEnumValuesDefinition();if(0===n.length&&0===r.length)throw this.unexpected();return this.node(e,{kind:h.ENUM_TYPE_EXTENSION,name:t,directives:n,values:r})}parseInputObjectTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("input");const t=this.parseName(),n=this.parseConstDirectives(),r=this.parseInputFieldsDefinition();if(0===n.length&&0===r.length)throw this.unexpected();return this.node(e,{kind:h.INPUT_OBJECT_TYPE_EXTENSION,name:t,directives:n,fields:r})}parseDirectiveDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("directive"),this.expectToken(m.AT);const n=this.parseName(),r=this.parseArgumentDefs(),i=this.expectOptionalKeyword("repeatable");this.expectKeyword("on");const o=this.parseDirectiveLocations();return this.node(e,{kind:h.DIRECTIVE_DEFINITION,description:t,name:n,arguments:r,repeatable:i,locations:o})}parseDirectiveLocations(){return this.delimitedMany(m.PIPE,this.parseDirectiveLocation)}parseDirectiveLocation(){const e=this._lexer.token,t=this.parseName();if(Object.prototype.hasOwnProperty.call(f,t.value))return t;throw this.unexpected(e)}node(e,t){return!0!==this._options.noLocation&&(t.loc=new Location(e,this._lexer.lastToken,this._lexer.source)),t}peek(e){return this._lexer.token.kind===e}expectToken(e){const t=this._lexer.token;if(t.kind===e)return this.advanceLexer(),t;throw c(this._lexer.source,t.start,`Expected ${K(e)}, found ${q(t)}.`)}expectOptionalToken(e){return this._lexer.token.kind===e&&(this.advanceLexer(),!0)}expectKeyword(e){const t=this._lexer.token;if(t.kind!==m.NAME||t.value!==e)throw c(this._lexer.source,t.start,`Expected "${e}", found ${q(t)}.`);this.advanceLexer()}expectOptionalKeyword(e){const t=this._lexer.token;return t.kind===m.NAME&&t.value===e&&(this.advanceLexer(),!0)}unexpected(e){const t=e??this._lexer.token;return c(this._lexer.source,t.start,`Unexpected ${q(t)}.`)}any(e,t,n){this.expectToken(e);const r=[];for(;!this.expectOptionalToken(n);)r.push(t.call(this));return r}optionalMany(e,t,n){if(this.expectOptionalToken(e)){const e=[];do{e.push(t.call(this))}while(!this.expectOptionalToken(n));return e}return[]}many(e,t,n){this.expectToken(e);const r=[];do{r.push(t.call(this))}while(!this.expectOptionalToken(n));return r}delimitedMany(e,t){this.expectOptionalToken(e);const n=[];do{n.push(t.call(this))}while(this.expectOptionalToken(e));return n}advanceLexer(){const{maxTokens:e}=this._options,t=this._lexer.advance();if(void 0!==e&&t.kind!==m.EOF&&(++this._tokenCounter,this._tokenCounter>e))throw c(this._lexer.source,t.start,`Document contains more that ${e} tokens. Parsing aborted.`)}}function q(e){const t=e.value;return K(e.kind)+(null!=t?` "${t}"`:"")}function K(e){return function(e){return e===m.BANG||e===m.QUESTION_MARK||e===m.DOLLAR||e===m.AMP||e===m.PAREN_L||e===m.PAREN_R||e===m.SPREAD||e===m.COLON||e===m.EQUALS||e===m.AT||e===m.BRACKET_L||e===m.BRACKET_R||e===m.BRACE_L||e===m.PIPE||e===m.BRACE_R}(e)?`"${e}"`:e}class AccumulatorMap extends Map{get[Symbol.toStringTag](){return"AccumulatorMap"}add(e,t){const n=this.get(e);void 0===n?this.set(e,[t]):n.push(t)}}function X(e){return e.charAt(0).toUpperCase()+e.slice(1).toLowerCase()}function z(e){return H("and",e)}function H(e,t){switch(0!==t.length||n(!1),t.length){case 1:return t[0];case 2:return t[0]+" "+e+" "+t[1]}const r=t.slice(0,-1),i=t[t.length-1];return r.join(", ")+", "+e+" "+i}function W(e,t){const[n,r]=t?[e,t]:[void 0,e];if(0===r.length)return"";let i=" Did you mean ";n&&(i+=n+" ");return i+H("or",r.slice(0,5).map((e=>`"${e}"`)))+"?"}function Z(e){return e}function ee(e,t){const n=Object.create(null);for(const r of e)n[t(r)]=r;return n}function te(e,t,n){const r=Object.create(null);for(const i of e)r[t(i)]=n(i);return r}function ne(e,t){const n=Object.create(null);for(const r of Object.keys(e))n[r]=t(e[r],r);return n}function re(e,t){let n=0,r=0;for(;n<e.length&&r<t.length;){let i=e.charCodeAt(n),o=t.charCodeAt(r);if(oe(i)&&oe(o)){let s=0;do{++n,s=10*s+i-ie,i=e.charCodeAt(n)}while(oe(i)&&s>0);let a=0;do{++r,a=10*a+o-ie,o=t.charCodeAt(r)}while(oe(o)&&a>0);if(s<a)return-1;if(s>a)return 1}else{if(i<o)return-1;if(i>o)return 1;++n,++r}}return e.length-t.length}const ie=48;function oe(e){return!isNaN(e)&&ie<=e&&e<=57}function se(e,t){const n=Object.create(null),r=new LexicalDistance(e),i=Math.floor(.4*e.length)+1;for(const e of t){const t=r.measure(e,i);void 0!==t&&(n[e]=t)}return Object.keys(n).sort(((e,t)=>{const r=n[e]-n[t];return 0!==r?r:re(e,t)}))}class LexicalDistance{constructor(e){this._input=e,this._inputLowerCase=e.toLowerCase(),this._inputArray=ae(this._inputLowerCase),this._rows=[new Array(e.length+1).fill(0),new Array(e.length+1).fill(0),new Array(e.length+1).fill(0)]}measure(e,t){if(this._input===e)return 0;const n=e.toLowerCase();if(this._inputLowerCase===n)return 1;let r=ae(n),i=this._inputArray;if(r.length<i.length){const e=r;r=i,i=e}const o=r.length,s=i.length;if(o-s>t)return;const a=this._rows;for(let e=0;e<=s;e++)a[0][e]=e;for(let e=1;e<=o;e++){const n=a[(e-1)%3],o=a[e%3];let c=o[0]=e;for(let t=1;t<=s;t++){const s=r[e-1]===i[t-1]?0:1;let u=Math.min(n[t]+1,o[t-1]+1,n[t-1]+s);if(e>1&&t>1&&r[e-1]===i[t-2]&&r[e-2]===i[t-1]){const n=a[(e-2)%3][t-2];u=Math.min(u,n+1)}u<c&&(c=u),o[t]=u}if(c>t)return}const c=a[o%3][s];return c<=t?c:void 0}}function ae(e){const t=e.length,n=new Array(t);for(let r=0;r<t;++r)n[r]=e.charCodeAt(r);return n}function ce(e){if(null==e)return Object.create(null);if(null===Object.getPrototypeOf(e))return e;const t=Object.create(null);for(const[n,r]of Object.entries(e))t[n]=r;return t}const ue=/[\x00-\x1f\x22\x5c\x7f-\x9f]/g;function le(e){return pe[e.charCodeAt(0)]}const pe=["\\u0000","\\u0001","\\u0002","\\u0003","\\u0004","\\u0005","\\u0006","\\u0007","\\b","\\t","\\n","\\u000B","\\f","\\r","\\u000E","\\u000F","\\u0010","\\u0011","\\u0012","\\u0013","\\u0014","\\u0015","\\u0016","\\u0017","\\u0018","\\u0019","\\u001A","\\u001B","\\u001C","\\u001D","\\u001E","\\u001F","","",'\\"',"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\u007F","\\u0080","\\u0081","\\u0082","\\u0083","\\u0084","\\u0085","\\u0086","\\u0087","\\u0088","\\u0089","\\u008A","\\u008B","\\u008C","\\u008D","\\u008E","\\u008F","\\u0090","\\u0091","\\u0092","\\u0093","\\u0094","\\u0095","\\u0096","\\u0097","\\u0098","\\u0099","\\u009A","\\u009B","\\u009C","\\u009D","\\u009E","\\u009F"],de=Object.freeze({});function fe(e,t,n=u){const r=new Map;for(const e of Object.values(h))r.set(e,me(t,e));let i,o,s,a=Array.isArray(e),c=[e],l=-1,d=[],f=e;const m=[],E=[];do{l++;const e=l===c.length,u=e&&0!==d.length;if(e){if(o=0===E.length?void 0:m[m.length-1],f=s,s=E.pop(),u)if(a){f=f.slice();let e=0;for(const[t,n]of d){const r=t-e;null===n?(f.splice(r,1),e++):f[r]=n}}else{f=Object.defineProperties({},Object.getOwnPropertyDescriptors(f));for(const[e,t]of d)f[e]=t}l=i.index,c=i.keys,d=i.edits,a=i.inArray,i=i.prev}else if(s){if(o=a?l:c[l],f=s[o],null==f)continue;m.push(o)}let h;if(!Array.isArray(f)){p(f)||M(!1,`Invalid AST Node: ${j(f)}.`);if(h=(e?r.get(f.kind)?.leave:r.get(f.kind)?.enter)?.call(t,f,o,s,m,E),h===de)break;if(!1===h){if(!e){m.pop();continue}}else if(void 0!==h&&(d.push([o,h]),!e)){if(!p(h)){m.pop();continue}f=h}}void 0===h&&u&&d.push([o,f]),e?m.pop():(i={inArray:a,index:l,keys:c,edits:d,prev:i},a=Array.isArray(f),c=a?f:n[f.kind]??[],l=-1,d=[],s&&E.push(s),s=f)}while(void 0!==i);return 0!==d.length?d[d.length-1][1]:e}function he(e){const t=new Array(e.length).fill(null),n=Object.create(null);for(const r of Object.values(h)){let i=!1;const o=new Array(e.length).fill(void 0),s=new Array(e.length).fill(void 0);for(let t=0;t<e.length;++t){const{enter:n,leave:a}=me(e[t],r);i||(i=null!=n||null!=a),o[t]=n,s[t]=a}if(!i)continue;const a={enter(...n){const r=n[0];for(let i=0;i<e.length;i++)if(null===t[i]){const s=o[i]?.apply(e[i],n);if(!1===s)t[i]=r;else if(s===de)t[i]=de;else if(void 0!==s)return s}},leave(...n){const r=n[0];for(let i=0;i<e.length;i++)if(null===t[i]){const r=s[i]?.apply(e[i],n);if(r===de)t[i]=de;else if(void 0!==r&&!1!==r)return r}else t[i]===r&&(t[i]=null)}};n[r]=a}return n}function me(e,t){const n=e[t];return"object"==typeof n?n:"function"==typeof n?{enter:n,leave:void 0}:{enter:e.enter,leave:e.leave}}function Ee(e){return fe(e,Te)}const Te={Name:{leave:e=>e.value},Variable:{leave:e=>"$"+e.name},Document:{leave:e=>ye(e.definitions,"\n\n")},OperationDefinition:{leave(e){const t=ve("(",ye(e.variableDefinitions,", "),")"),n=ye([e.operation,ye([e.name,t]),ye(e.directives," ")]," ");return("query"===n?"":n+" ")+e.selectionSet}},VariableDefinition:{leave:({variable:e,type:t,defaultValue:n,directives:r})=>e+": "+t+ve(" = ",n)+ve(" ",ye(r," "))},SelectionSet:{leave:({selections:e})=>Ne(e)},Field:{leave({alias:e,name:t,arguments:n,nullabilityAssertion:r,directives:i,selectionSet:o}){const s=ye([ve("",e,": "),t],"");let a=s+ve("(",ye(n,", "),")");return a.length>80&&(a=s+ve("(\n",Ie(ye(n,"\n")),"\n)")),ye([a,r,ve(" ",ye(i," ")),ve(" ",o)])}},Argument:{leave:({name:e,value:t})=>e+": "+t},ListNullabilityOperator:{leave:({nullabilityAssertion:e})=>ye(["[",e,"]"])},NonNullAssertion:{leave:({nullabilityAssertion:e})=>ye([e,"!"])},ErrorBoundary:{leave:({nullabilityAssertion:e})=>ye([e,"?"])},FragmentSpread:{leave:({name:e,directives:t})=>"..."+e+ve(" ",ye(t," "))},InlineFragment:{leave:({typeCondition:e,directives:t,selectionSet:n})=>ye(["...",ve("on ",e),ye(t," "),n]," ")},FragmentDefinition:{leave:({name:e,typeCondition:t,variableDefinitions:n,directives:r,selectionSet:i})=>`fragment ${e}${ve("(",ye(n,", "),")")} on ${t} ${ve("",ye(r," ")," ")}`+i},IntValue:{leave:({value:e})=>e},FloatValue:{leave:({value:e})=>e},StringValue:{leave:({value:e,block:t})=>t?function(e,t){const n=e.replace(/"""/g,'\\"""'),r=n.split(/\r\n|[\n\r]/g),i=1===r.length,o=r.length>1&&r.slice(1).every((e=>0===e.length||E(e.charCodeAt(0)))),s=n.endsWith('\\"""'),a=e.endsWith('"')&&!s,c=e.endsWith("\\"),u=a||c,l=!t?.minimize&&(!i||e.length>70||u||o||s);let p="";const d=i&&E(e.charCodeAt(0));return(l&&!d||o)&&(p+="\n"),p+=n,(l||u)&&(p+="\n"),'"""'+p+'"""'}(e):`"${e.replace(ue,le)}"`},BooleanValue:{leave:({value:e})=>e?"true":"false"},NullValue:{leave:()=>"null"},EnumValue:{leave:({value:e})=>e},ListValue:{leave:({values:e})=>"["+ye(e,", ")+"]"},ObjectValue:{leave:({fields:e})=>"{ "+ye(e,", ")+" }"},ObjectField:{leave:({name:e,value:t})=>e+": "+t},Directive:{leave:({name:e,arguments:t})=>"@"+e+ve("(",ye(t,", "),")")},NamedType:{leave:({name:e})=>e},ListType:{leave:({type:e})=>"["+e+"]"},NonNullType:{leave:({type:e})=>e+"!"},SchemaDefinition:{leave:({description:e,directives:t,operationTypes:n})=>ve("",e,"\n")+ye(["schema",ye(t," "),Ne(n)]," ")},OperationTypeDefinition:{leave:({operation:e,type:t})=>e+": "+t},ScalarTypeDefinition:{leave:({description:e,name:t,directives:n})=>ve("",e,"\n")+ye(["scalar",t,ye(n," ")]," ")},ObjectTypeDefinition:{leave:({description:e,name:t,interfaces:n,directives:r,fields:i})=>ve("",e,"\n")+ye(["type",t,ve("implements ",ye(n," & ")),ye(r," "),Ne(i)]," ")},FieldDefinition:{leave:({description:e,name:t,arguments:n,type:r,directives:i})=>ve("",e,"\n")+t+(ge(n)?ve("(\n",Ie(ye(n,"\n")),"\n)"):ve("(",ye(n,", "),")"))+": "+r+ve(" ",ye(i," "))},InputValueDefinition:{leave:({description:e,name:t,type:n,defaultValue:r,directives:i})=>ve("",e,"\n")+ye([t+": "+n,ve("= ",r),ye(i," ")]," ")},InterfaceTypeDefinition:{leave:({description:e,name:t,interfaces:n,directives:r,fields:i})=>ve("",e,"\n")+ye(["interface",t,ve("implements ",ye(n," & ")),ye(r," "),Ne(i)]," ")},UnionTypeDefinition:{leave:({description:e,name:t,directives:n,types:r})=>ve("",e,"\n")+ye(["union",t,ye(n," "),ve("= ",ye(r," | "))]," ")},EnumTypeDefinition:{leave:({description:e,name:t,directives:n,values:r})=>ve("",e,"\n")+ye(["enum",t,ye(n," "),Ne(r)]," ")},EnumValueDefinition:{leave:({description:e,name:t,directives:n})=>ve("",e,"\n")+ye([t,ye(n," ")]," ")},InputObjectTypeDefinition:{leave:({description:e,name:t,directives:n,fields:r})=>ve("",e,"\n")+ye(["input",t,ye(n," "),Ne(r)]," ")},DirectiveDefinition:{leave:({description:e,name:t,arguments:n,repeatable:r,locations:i})=>ve("",e,"\n")+"directive @"+t+(ge(n)?ve("(\n",Ie(ye(n,"\n")),"\n)"):ve("(",ye(n,", "),")"))+(r?" repeatable":"")+" on "+ye(i," | ")},SchemaExtension:{leave:({directives:e,operationTypes:t})=>ye(["extend schema",ye(e," "),Ne(t)]," ")},ScalarTypeExtension:{leave:({name:e,directives:t})=>ye(["extend scalar",e,ye(t," ")]," ")},ObjectTypeExtension:{leave:({name:e,interfaces:t,directives:n,fields:r})=>ye(["extend type",e,ve("implements ",ye(t," & ")),ye(n," "),Ne(r)]," ")},InterfaceTypeExtension:{leave:({name:e,interfaces:t,directives:n,fields:r})=>ye(["extend interface",e,ve("implements ",ye(t," & ")),ye(n," "),Ne(r)]," ")},UnionTypeExtension:{leave:({name:e,directives:t,types:n})=>ye(["extend union",e,ye(t," "),ve("= ",ye(n," | "))]," ")},EnumTypeExtension:{leave:({name:e,directives:t,values:n})=>ye(["extend enum",e,ye(t," "),Ne(n)]," ")},InputObjectTypeExtension:{leave:({name:e,directives:t,fields:n})=>ye(["extend input",e,ye(t," "),Ne(n)]," ")}};function ye(e,t=""){return e?.filter((e=>e)).join(t)??""}function Ne(e){return ve("{\n",Ie(ye(e,"\n")),"\n}")}function ve(e,t,n=""){return null!=t&&""!==t?e+t+n:""}function Ie(e){return ve("  ",e.replace(/\n/g,"\n  "))}function ge(e){return e?.some((e=>e.includes("\n")))??!1}function _e(e,t){switch(e.kind){case h.NULL:return null;case h.INT:return parseInt(e.value,10);case h.FLOAT:return parseFloat(e.value);case h.STRING:case h.ENUM:case h.BOOLEAN:return e.value;case h.LIST:return e.values.map((e=>_e(e,t)));case h.OBJECT:return te(e.fields,(e=>e.name.value),(e=>_e(e.value,t)));case h.VARIABLE:return t?.[e.name.value]}}function Se(e){if(0===e.length)throw new GraphQLError("Expected name to be a non-empty string.");for(let t=1;t<e.length;++t)if(!v(e.charCodeAt(t)))throw new GraphQLError(`Names must only contain [_a-zA-Z0-9] but "${e}" does not.`);if(!N(e.charCodeAt(0)))throw new GraphQLError(`Names must start with [_a-zA-Z] but "${e}" does not.`);return e}function Oe(e){if("true"===e||"false"===e||"null"===e)throw new GraphQLError(`Enum values cannot be named: ${e}`);return Se(e)}function be(e){return Le(e)||Ae(e)||De(e)||we(e)||ke(e)||xe(e)||Fe(e)||Re(e)}function Le(e){return Y(e,GraphQLScalarType)}function Ae(e){return Y(e,GraphQLObjectType)}function De(e){return Y(e,GraphQLInterfaceType)}function we(e){return Y(e,GraphQLUnionType)}function ke(e){return Y(e,GraphQLEnumType)}function xe(e){return Y(e,GraphQLInputObjectType)}function Fe(e){return Y(e,GraphQLList)}function Re(e){return Y(e,GraphQLNonNull)}function Ce(e){return Le(e)||ke(e)||xe(e)||Ve(e)&&Ce(e.ofType)}function Ge(e){return Le(e)||Ae(e)||De(e)||we(e)||ke(e)||Ve(e)&&Ge(e.ofType)}function $e(e){return Le(e)||ke(e)}function Qe(e){return Ae(e)||De(e)||we(e)}function Ue(e){return De(e)||we(e)}class GraphQLList{constructor(e){this.ofType=e}get[Symbol.toStringTag](){return"GraphQLList"}toString(){return"["+String(this.ofType)+"]"}toJSON(){return this.toString()}}class GraphQLNonNull{constructor(e){this.ofType=e}get[Symbol.toStringTag](){return"GraphQLNonNull"}toString(){return String(this.ofType)+"!"}toJSON(){return this.toString()}}function Ve(e){return Fe(e)||Re(e)}function Pe(e){if(!function(e){return be(e)&&!Re(e)}(e))throw new Error(`Expected ${j(e)} to be a GraphQL nullable type.`);return e}function Me(e){if(e)return Re(e)?e.ofType:e}function je(e){return Le(e)||Ae(e)||De(e)||we(e)||ke(e)||xe(e)}function Be(e){if(e){let t=e;for(;Ve(t);)t=t.ofType;return t}}function Ye(e){return"function"==typeof e?e():e}function Je(e){return"function"==typeof e?e():e}class GraphQLScalarType{constructor(e){const t=e.parseValue??Z;this.name=Se(e.name),this.description=e.description,this.specifiedByURL=e.specifiedByURL,this.serialize=e.serialize??Z,this.parseValue=t,this.parseLiteral=e.parseLiteral??((e,n)=>t(_e(e,n))),this.extensions=ce(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=e.extensionASTNodes??[],e.parseLiteral&&("function"==typeof e.parseValue&&"function"==typeof e.parseLiteral||M(!1,`${this.name} must provide both "parseValue" and "parseLiteral" functions.`))}get[Symbol.toStringTag](){return"GraphQLScalarType"}toConfig(){return{name:this.name,description:this.description,specifiedByURL:this.specifiedByURL,serialize:this.serialize,parseValue:this.parseValue,parseLiteral:this.parseLiteral,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}class GraphQLObjectType{constructor(e){this.name=Se(e.name),this.description=e.description,this.isTypeOf=e.isTypeOf,this.extensions=ce(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=e.extensionASTNodes??[],this._fields=()=>Ke(e),this._interfaces=()=>qe(e)}get[Symbol.toStringTag](){return"GraphQLObjectType"}getFields(){return"function"==typeof this._fields&&(this._fields=this._fields()),this._fields}getInterfaces(){return"function"==typeof this._interfaces&&(this._interfaces=this._interfaces()),this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:ze(this.getFields()),isTypeOf:this.isTypeOf,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function qe(e){return Ye(e.interfaces??[])}function Ke(e){return ne(Je(e.fields),((e,t)=>{const n=e.args??{};return{name:Se(t),description:e.description,type:e.type,args:Xe(n),resolve:e.resolve,subscribe:e.subscribe,deprecationReason:e.deprecationReason,extensions:ce(e.extensions),astNode:e.astNode}}))}function Xe(e){return Object.entries(e).map((([e,t])=>({name:Se(e),description:t.description,type:t.type,defaultValue:t.defaultValue,deprecationReason:t.deprecationReason,extensions:ce(t.extensions),astNode:t.astNode})))}function ze(e){return ne(e,(e=>({description:e.description,type:e.type,args:He(e.args),resolve:e.resolve,subscribe:e.subscribe,deprecationReason:e.deprecationReason,extensions:e.extensions,astNode:e.astNode})))}function He(e){return te(e,(e=>e.name),(e=>({description:e.description,type:e.type,defaultValue:e.defaultValue,deprecationReason:e.deprecationReason,extensions:e.extensions,astNode:e.astNode})))}function We(e){return Re(e.type)&&void 0===e.defaultValue}class GraphQLInterfaceType{constructor(e){this.name=Se(e.name),this.description=e.description,this.resolveType=e.resolveType,this.extensions=ce(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=e.extensionASTNodes??[],this._fields=Ke.bind(void 0,e),this._interfaces=qe.bind(void 0,e)}get[Symbol.toStringTag](){return"GraphQLInterfaceType"}getFields(){return"function"==typeof this._fields&&(this._fields=this._fields()),this._fields}getInterfaces(){return"function"==typeof this._interfaces&&(this._interfaces=this._interfaces()),this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:ze(this.getFields()),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}class GraphQLUnionType{constructor(e){this.name=Se(e.name),this.description=e.description,this.resolveType=e.resolveType,this.extensions=ce(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=e.extensionASTNodes??[],this._types=Ze.bind(void 0,e)}get[Symbol.toStringTag](){return"GraphQLUnionType"}getTypes(){return"function"==typeof this._types&&(this._types=this._types()),this._types}toConfig(){return{name:this.name,description:this.description,types:this.getTypes(),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function Ze(e){return Ye(e.types)}class GraphQLEnumType{constructor(e){this.name=Se(e.name),this.description=e.description,this.extensions=ce(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=e.extensionASTNodes??[],this._values=Object.entries(e.values).map((([e,t])=>({name:Oe(e),description:t.description,value:void 0!==t.value?t.value:e,deprecationReason:t.deprecationReason,extensions:ce(t.extensions),astNode:t.astNode}))),this._valueLookup=new Map(this._values.map((e=>[e.value,e]))),this._nameLookup=ee(this._values,(e=>e.name))}get[Symbol.toStringTag](){return"GraphQLEnumType"}getValues(){return this._values}getValue(e){return this._nameLookup[e]}serialize(e){const t=this._valueLookup.get(e);if(void 0===t)throw new GraphQLError(`Enum "${this.name}" cannot represent value: ${j(e)}`);return t.name}parseValue(e){if("string"!=typeof e){const t=j(e);throw new GraphQLError(`Enum "${this.name}" cannot represent non-string value: ${t}.`+et(this,t))}const t=this.getValue(e);if(null==t)throw new GraphQLError(`Value "${e}" does not exist in "${this.name}" enum.`+et(this,e));return t.value}parseLiteral(e,t){if(e.kind!==h.ENUM){const t=Ee(e);throw new GraphQLError(`Enum "${this.name}" cannot represent non-enum value: ${t}.`+et(this,t),{nodes:e})}const n=this.getValue(e.value);if(null==n){const t=Ee(e);throw new GraphQLError(`Value "${t}" does not exist in "${this.name}" enum.`+et(this,t),{nodes:e})}return n.value}toConfig(){const e=te(this.getValues(),(e=>e.name),(e=>({description:e.description,value:e.value,deprecationReason:e.deprecationReason,extensions:e.extensions,astNode:e.astNode})));return{name:this.name,description:this.description,values:e,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function et(e,t){return W("the enum value",se(t,e.getValues().map((e=>e.name))))}class GraphQLInputObjectType{constructor(e){this.name=Se(e.name),this.description=e.description,this.extensions=ce(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=e.extensionASTNodes??[],this._fields=tt.bind(void 0,e)}get[Symbol.toStringTag](){return"GraphQLInputObjectType"}getFields(){return"function"==typeof this._fields&&(this._fields=this._fields()),this._fields}toConfig(){const e=ne(this.getFields(),(e=>({description:e.description,type:e.type,defaultValue:e.defaultValue,deprecationReason:e.deprecationReason,extensions:e.extensions,astNode:e.astNode})));return{name:this.name,description:this.description,fields:e,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function tt(e){return ne(Je(e.fields),((t,n)=>(!("resolve"in t)||M(!1,`${e.name}.${n} field has a resolve property, but Input Types cannot define resolvers.`),{name:Se(n),description:t.description,type:t.type,defaultValue:t.defaultValue,deprecationReason:t.deprecationReason,extensions:ce(t.extensions),astNode:t.astNode})))}function nt(e){return Re(e.type)&&void 0===e.defaultValue}function rt(e,t){return e===t||(Re(e)&&Re(t)||!(!Fe(e)||!Fe(t)))&&rt(e.ofType,t.ofType)}function it(e,t,n){return t===n||(Re(n)?!!Re(t)&&it(e,t.ofType,n.ofType):Re(t)?it(e,t.ofType,n):Fe(n)?!!Fe(t)&&it(e,t.ofType,n.ofType):!Fe(t)&&(Ue(n)&&(De(t)||Ae(t))&&e.isSubType(n,t)))}function ot(e,t,n){return t===n||(Ue(t)?Ue(n)?e.getPossibleTypes(t).some((t=>e.isSubType(n,t))):e.isSubType(t,n):!!Ue(n)&&e.isSubType(n,t))}const st=2147483647,at=-2147483648,ct=new GraphQLScalarType({name:"Int",description:"The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",serialize(e){const t=mt(e);if("boolean"==typeof t)return t?1:0;let n=t;if("string"==typeof t&&""!==t&&(n=Number(t)),"number"!=typeof n||!Number.isInteger(n))throw new GraphQLError(`Int cannot represent non-integer value: ${j(t)}`);if(n>st||n<at)throw new GraphQLError("Int cannot represent non 32-bit signed integer value: "+j(t));return n},parseValue(e){if("number"!=typeof e||!Number.isInteger(e))throw new GraphQLError(`Int cannot represent non-integer value: ${j(e)}`);if(e>st||e<at)throw new GraphQLError(`Int cannot represent non 32-bit signed integer value: ${e}`);return e},parseLiteral(e){if(e.kind!==h.INT)throw new GraphQLError(`Int cannot represent non-integer value: ${Ee(e)}`,{nodes:e});const t=parseInt(e.value,10);if(t>st||t<at)throw new GraphQLError(`Int cannot represent non 32-bit signed integer value: ${e.value}`,{nodes:e});return t}}),ut=new GraphQLScalarType({name:"Float",description:"The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",serialize(e){const t=mt(e);if("boolean"==typeof t)return t?1:0;let n=t;if("string"==typeof t&&""!==t&&(n=Number(t)),"number"!=typeof n||!Number.isFinite(n))throw new GraphQLError(`Float cannot represent non numeric value: ${j(t)}`);return n},parseValue(e){if("number"!=typeof e||!Number.isFinite(e))throw new GraphQLError(`Float cannot represent non numeric value: ${j(e)}`);return e},parseLiteral(e){if(e.kind!==h.FLOAT&&e.kind!==h.INT)throw new GraphQLError(`Float cannot represent non numeric value: ${Ee(e)}`,{nodes:e});return parseFloat(e.value)}}),lt=new GraphQLScalarType({name:"String",description:"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",serialize(e){const t=mt(e);if("string"==typeof t)return t;if("boolean"==typeof t)return t?"true":"false";if("number"==typeof t&&Number.isFinite(t))return t.toString();throw new GraphQLError(`String cannot represent value: ${j(e)}`)},parseValue(e){if("string"!=typeof e)throw new GraphQLError(`String cannot represent a non string value: ${j(e)}`);return e},parseLiteral(e){if(e.kind!==h.STRING)throw new GraphQLError(`String cannot represent a non string value: ${Ee(e)}`,{nodes:e});return e.value}}),pt=new GraphQLScalarType({name:"Boolean",description:"The `Boolean` scalar type represents `true` or `false`.",serialize(e){const t=mt(e);if("boolean"==typeof t)return t;if(Number.isFinite(t))return 0!==t;throw new GraphQLError(`Boolean cannot represent a non boolean value: ${j(t)}`)},parseValue(e){if("boolean"!=typeof e)throw new GraphQLError(`Boolean cannot represent a non boolean value: ${j(e)}`);return e},parseLiteral(e){if(e.kind!==h.BOOLEAN)throw new GraphQLError(`Boolean cannot represent a non boolean value: ${Ee(e)}`,{nodes:e});return e.value}}),dt=new GraphQLScalarType({name:"ID",description:'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.',serialize(e){const t=mt(e);if("string"==typeof t)return t;if(Number.isInteger(t))return String(t);throw new GraphQLError(`ID cannot represent value: ${j(e)}`)},parseValue(e){if("string"==typeof e)return e;if("number"==typeof e&&Number.isInteger(e))return e.toString();throw new GraphQLError(`ID cannot represent value: ${j(e)}`)},parseLiteral(e){if(e.kind!==h.STRING&&e.kind!==h.INT)throw new GraphQLError("ID cannot represent a non-string and non-integer value: "+Ee(e),{nodes:e});return e.value}}),ft=Object.freeze([lt,ct,ut,pt,dt]);function ht(e){return ft.some((({name:t})=>e.name===t))}function mt(e){if(t(e)){if("function"==typeof e.valueOf){const n=e.valueOf();if(!t(n))return n}if("function"==typeof e.toJSON)return e.toJSON()}return e}function Et(e){return Y(e,GraphQLDirective)}class GraphQLDirective{constructor(e){this.name=Se(e.name),this.description=e.description,this.locations=e.locations,this.isRepeatable=e.isRepeatable??!1,this.extensions=ce(e.extensions),this.astNode=e.astNode;const t=e.args??{};this.args=Xe(t)}get[Symbol.toStringTag](){return"GraphQLDirective"}toConfig(){return{name:this.name,description:this.description,locations:this.locations,args:He(this.args),isRepeatable:this.isRepeatable,extensions:this.extensions,astNode:this.astNode}}toString(){return"@"+this.name}toJSON(){return this.toString()}}const Tt=new GraphQLDirective({name:"include",description:"Directs the executor to include this field or fragment only when the `if` argument is true.",locations:[f.FIELD,f.FRAGMENT_SPREAD,f.INLINE_FRAGMENT],args:{if:{type:new GraphQLNonNull(pt),description:"Included when true."}}}),yt=new GraphQLDirective({name:"skip",description:"Directs the executor to skip this field or fragment when the `if` argument is true.",locations:[f.FIELD,f.FRAGMENT_SPREAD,f.INLINE_FRAGMENT],args:{if:{type:new GraphQLNonNull(pt),description:"Skipped when true."}}}),Nt=new GraphQLDirective({name:"defer",description:"Directs the executor to defer this fragment when the `if` argument is true or undefined.",locations:[f.FRAGMENT_SPREAD,f.INLINE_FRAGMENT],args:{if:{type:new GraphQLNonNull(pt),description:"Deferred when true or undefined.",defaultValue:!0},label:{type:lt,description:"Unique name"}}}),vt=new GraphQLDirective({name:"stream",description:"Directs the executor to stream plural fields when the `if` argument is true or undefined.",locations:[f.FIELD],args:{if:{type:new GraphQLNonNull(pt),description:"Stream when true or undefined.",defaultValue:!0},label:{type:lt,description:"Unique name"},initialCount:{defaultValue:0,type:ct,description:"Number of items to return immediately"}}}),It="No longer supported",gt=new GraphQLDirective({name:"deprecated",description:"Marks an element of a GraphQL schema as no longer supported.",locations:[f.FIELD_DEFINITION,f.ARGUMENT_DEFINITION,f.INPUT_FIELD_DEFINITION,f.ENUM_VALUE],args:{reason:{type:lt,description:"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).",defaultValue:It}}}),_t=new GraphQLDirective({name:"specifiedBy",description:"Exposes a URL that specifies the behavior of this scalar.",locations:[f.SCALAR],args:{url:{type:new GraphQLNonNull(lt),description:"The URL that specifies the behavior of this scalar."}}}),St=Object.freeze([Tt,yt,gt,_t]);function Ot(e){return St.some((({name:t})=>t===e.name))}function bt(e,r){if(Re(r)){const t=bt(e,r.ofType);return t?.kind===h.NULL?null:t}if(null===e)return{kind:h.NULL};if(void 0===e)return null;if(Fe(r)){const t=r.ofType;if("object"==typeof(i=e)&&"function"==typeof i?.[Symbol.iterator]){const n=[];for(const r of e){const e=bt(r,t);null!=e&&n.push(e)}return{kind:h.LIST,values:n}}return bt(e,t)}var i;if(xe(r)){if(!t(e))return null;const n=[];for(const t of Object.values(r.getFields())){const r=bt(e[t.name],t.type);r&&n.push({kind:h.OBJECT_FIELD,name:{kind:h.NAME,value:t.name},value:r})}return{kind:h.OBJECT,fields:n}}if($e(r)){const t=r.serialize(e);if(null==t)return null;if("boolean"==typeof t)return{kind:h.BOOLEAN,value:t};if("number"==typeof t&&Number.isFinite(t)){const e=String(t);return Lt.test(e)?{kind:h.INT,value:e}:{kind:h.FLOAT,value:e}}if("string"==typeof t)return ke(r)?{kind:h.ENUM,value:t}:r===dt&&Lt.test(t)?{kind:h.INT,value:t}:{kind:h.STRING,value:t};throw new TypeError(`Cannot convert value to AST: ${j(t)}.`)}n(!1,"Unexpected input type: "+j(r))}const Lt=/^-?(?:0|[1-9][0-9]*)$/,At=new GraphQLObjectType({name:"__Schema",description:"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",fields:()=>({description:{type:lt,resolve:e=>e.description},types:{description:"A list of all types supported by this server.",type:new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(kt))),resolve:e=>Object.values(e.getTypeMap())},queryType:{description:"The type that query operations will be rooted at.",type:new GraphQLNonNull(kt),resolve:e=>e.getQueryType()},mutationType:{description:"If this server supports mutation, the type that mutation operations will be rooted at.",type:kt,resolve:e=>e.getMutationType()},subscriptionType:{description:"If this server support subscription, the type that subscription operations will be rooted at.",type:kt,resolve:e=>e.getSubscriptionType()},directives:{description:"A list of all directives supported by this server.",type:new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(Dt))),resolve:e=>e.getDirectives()}})}),Dt=new GraphQLObjectType({name:"__Directive",description:"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",fields:()=>({name:{type:new GraphQLNonNull(lt),resolve:e=>e.name},description:{type:lt,resolve:e=>e.description},isRepeatable:{type:new GraphQLNonNull(pt),resolve:e=>e.isRepeatable},locations:{type:new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(wt))),resolve:e=>e.locations},args:{type:new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(Ft))),args:{includeDeprecated:{type:pt,defaultValue:!1}},resolve:(e,{includeDeprecated:t})=>t?e.args:e.args.filter((e=>null==e.deprecationReason))}})}),wt=new GraphQLEnumType({name:"__DirectiveLocation",description:"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",values:{QUERY:{value:f.QUERY,description:"Location adjacent to a query operation."},MUTATION:{value:f.MUTATION,description:"Location adjacent to a mutation operation."},SUBSCRIPTION:{value:f.SUBSCRIPTION,description:"Location adjacent to a subscription operation."},FIELD:{value:f.FIELD,description:"Location adjacent to a field."},FRAGMENT_DEFINITION:{value:f.FRAGMENT_DEFINITION,description:"Location adjacent to a fragment definition."},FRAGMENT_SPREAD:{value:f.FRAGMENT_SPREAD,description:"Location adjacent to a fragment spread."},INLINE_FRAGMENT:{value:f.INLINE_FRAGMENT,description:"Location adjacent to an inline fragment."},VARIABLE_DEFINITION:{value:f.VARIABLE_DEFINITION,description:"Location adjacent to a variable definition."},SCHEMA:{value:f.SCHEMA,description:"Location adjacent to a schema definition."},SCALAR:{value:f.SCALAR,description:"Location adjacent to a scalar definition."},OBJECT:{value:f.OBJECT,description:"Location adjacent to an object type definition."},FIELD_DEFINITION:{value:f.FIELD_DEFINITION,description:"Location adjacent to a field definition."},ARGUMENT_DEFINITION:{value:f.ARGUMENT_DEFINITION,description:"Location adjacent to an argument definition."},INTERFACE:{value:f.INTERFACE,description:"Location adjacent to an interface definition."},UNION:{value:f.UNION,description:"Location adjacent to a union definition."},ENUM:{value:f.ENUM,description:"Location adjacent to an enum definition."},ENUM_VALUE:{value:f.ENUM_VALUE,description:"Location adjacent to an enum value definition."},INPUT_OBJECT:{value:f.INPUT_OBJECT,description:"Location adjacent to an input object type definition."},INPUT_FIELD_DEFINITION:{value:f.INPUT_FIELD_DEFINITION,description:"Location adjacent to an input object field definition."}}}),kt=new GraphQLObjectType({name:"__Type",description:"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",fields:()=>({kind:{type:new GraphQLNonNull(Gt),resolve:e=>Le(e)?Ct.SCALAR:Ae(e)?Ct.OBJECT:De(e)?Ct.INTERFACE:we(e)?Ct.UNION:ke(e)?Ct.ENUM:xe(e)?Ct.INPUT_OBJECT:Fe(e)?Ct.LIST:Re(e)?Ct.NON_NULL:void n(!1,`Unexpected type: "${j(e)}".`)},name:{type:lt,resolve:e=>"name"in e?e.name:void 0},description:{type:lt,resolve:e=>"description"in e?e.description:void 0},specifiedByURL:{type:lt,resolve:e=>"specifiedByURL"in e?e.specifiedByURL:void 0},fields:{type:new GraphQLList(new GraphQLNonNull(xt)),args:{includeDeprecated:{type:pt,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(Ae(e)||De(e)){const n=Object.values(e.getFields());return t?n:n.filter((e=>null==e.deprecationReason))}}},interfaces:{type:new GraphQLList(new GraphQLNonNull(kt)),resolve(e){if(Ae(e)||De(e))return e.getInterfaces()}},possibleTypes:{type:new GraphQLList(new GraphQLNonNull(kt)),resolve(e,t,n,{schema:r}){if(Ue(e))return r.getPossibleTypes(e)}},enumValues:{type:new GraphQLList(new GraphQLNonNull(Rt)),args:{includeDeprecated:{type:pt,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(ke(e)){const n=e.getValues();return t?n:n.filter((e=>null==e.deprecationReason))}}},inputFields:{type:new GraphQLList(new GraphQLNonNull(Ft)),args:{includeDeprecated:{type:pt,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(xe(e)){const n=Object.values(e.getFields());return t?n:n.filter((e=>null==e.deprecationReason))}}},ofType:{type:kt,resolve:e=>"ofType"in e?e.ofType:void 0}})}),xt=new GraphQLObjectType({name:"__Field",description:"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",fields:()=>({name:{type:new GraphQLNonNull(lt),resolve:e=>e.name},description:{type:lt,resolve:e=>e.description},args:{type:new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(Ft))),args:{includeDeprecated:{type:pt,defaultValue:!1}},resolve:(e,{includeDeprecated:t})=>t?e.args:e.args.filter((e=>null==e.deprecationReason))},type:{type:new GraphQLNonNull(kt),resolve:e=>e.type},isDeprecated:{type:new GraphQLNonNull(pt),resolve:e=>null!=e.deprecationReason},deprecationReason:{type:lt,resolve:e=>e.deprecationReason}})}),Ft=new GraphQLObjectType({name:"__InputValue",description:"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",fields:()=>({name:{type:new GraphQLNonNull(lt),resolve:e=>e.name},description:{type:lt,resolve:e=>e.description},type:{type:new GraphQLNonNull(kt),resolve:e=>e.type},defaultValue:{type:lt,description:"A GraphQL-formatted string representing the default value for this input value.",resolve(e){const{type:t,defaultValue:n}=e,r=bt(n,t);return r?Ee(r):null}},isDeprecated:{type:new GraphQLNonNull(pt),resolve:e=>null!=e.deprecationReason},deprecationReason:{type:lt,resolve:e=>e.deprecationReason}})}),Rt=new GraphQLObjectType({name:"__EnumValue",description:"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",fields:()=>({name:{type:new GraphQLNonNull(lt),resolve:e=>e.name},description:{type:lt,resolve:e=>e.description},isDeprecated:{type:new GraphQLNonNull(pt),resolve:e=>null!=e.deprecationReason},deprecationReason:{type:lt,resolve:e=>e.deprecationReason}})});var Ct;!function(e){e.SCALAR="SCALAR",e.OBJECT="OBJECT",e.INTERFACE="INTERFACE",e.UNION="UNION",e.ENUM="ENUM",e.INPUT_OBJECT="INPUT_OBJECT",e.LIST="LIST",e.NON_NULL="NON_NULL"}(Ct||(Ct={}));const Gt=new GraphQLEnumType({name:"__TypeKind",description:"An enum describing what kind of type a given `__Type` is.",values:{SCALAR:{value:Ct.SCALAR,description:"Indicates this type is a scalar."},OBJECT:{value:Ct.OBJECT,description:"Indicates this type is an object. `fields` and `interfaces` are valid fields."},INTERFACE:{value:Ct.INTERFACE,description:"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields."},UNION:{value:Ct.UNION,description:"Indicates this type is a union. `possibleTypes` is a valid field."},ENUM:{value:Ct.ENUM,description:"Indicates this type is an enum. `enumValues` is a valid field."},INPUT_OBJECT:{value:Ct.INPUT_OBJECT,description:"Indicates this type is an input object. `inputFields` is a valid field."},LIST:{value:Ct.LIST,description:"Indicates this type is a list. `ofType` is a valid field."},NON_NULL:{value:Ct.NON_NULL,description:"Indicates this type is a non-null. `ofType` is a valid field."}}}),$t={name:"__schema",type:new GraphQLNonNull(At),description:"Access the current type schema of this server.",args:[],resolve:(e,t,n,{schema:r})=>r,deprecationReason:void 0,extensions:Object.create(null),astNode:void 0},Qt={name:"__type",type:kt,description:"Request the type information of a single type.",args:[{name:"name",description:void 0,type:new GraphQLNonNull(lt),defaultValue:void 0,deprecationReason:void 0,extensions:Object.create(null),astNode:void 0}],resolve:(e,{name:t},n,{schema:r})=>r.getType(t),deprecationReason:void 0,extensions:Object.create(null),astNode:void 0},Ut={name:"__typename",type:new GraphQLNonNull(lt),description:"The name of the current Object type at runtime.",args:[],resolve:(e,t,n,{parentType:r})=>r.name,deprecationReason:void 0,extensions:Object.create(null),astNode:void 0},Vt=Object.freeze([At,Dt,wt,kt,xt,Ft,Rt,Gt]);function Pt(e){return Vt.some((({name:t})=>e.name===t))}function Mt(e){if(!function(e){return Y(e,GraphQLSchema)}(e))throw new Error(`Expected ${j(e)} to be a GraphQL schema.`);return e}class GraphQLSchema{constructor(e){this.__validationErrors=!0===e.assumeValid?[]:void 0,this.description=e.description,this.extensions=ce(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=e.extensionASTNodes??[],this._queryType=e.query,this._mutationType=e.mutation,this._subscriptionType=e.subscription,this._directives=e.directives??St;const t=new Set(e.types);if(null!=e.types)for(const n of e.types)t.delete(n),jt(n,t);null!=this._queryType&&jt(this._queryType,t),null!=this._mutationType&&jt(this._mutationType,t),null!=this._subscriptionType&&jt(this._subscriptionType,t);for(const e of this._directives)if(Et(e))for(const n of e.args)jt(n.type,t);jt(At,t),this._typeMap=Object.create(null),this._subTypeMap=new Map,this._implementationsMap=Object.create(null);for(const e of t){if(null==e)continue;const t=e.name;if(void 0!==this._typeMap[t])throw new Error(`Schema must contain uniquely named types but contains multiple types named "${t}".`);if(this._typeMap[t]=e,De(e)){for(const t of e.getInterfaces())if(De(t)){let n=this._implementationsMap[t.name];void 0===n&&(n=this._implementationsMap[t.name]={objects:[],interfaces:[]}),n.interfaces.push(e)}}else if(Ae(e))for(const t of e.getInterfaces())if(De(t)){let n=this._implementationsMap[t.name];void 0===n&&(n=this._implementationsMap[t.name]={objects:[],interfaces:[]}),n.objects.push(e)}}}get[Symbol.toStringTag](){return"GraphQLSchema"}getQueryType(){return this._queryType}getMutationType(){return this._mutationType}getSubscriptionType(){return this._subscriptionType}getRootType(e){switch(e){case d.QUERY:return this.getQueryType();case d.MUTATION:return this.getMutationType();case d.SUBSCRIPTION:return this.getSubscriptionType()}}getTypeMap(){return this._typeMap}getType(e){return this.getTypeMap()[e]}getPossibleTypes(e){return we(e)?e.getTypes():this.getImplementations(e).objects}getImplementations(e){return this._implementationsMap[e.name]??{objects:[],interfaces:[]}}isSubType(e,t){let n=this._subTypeMap.get(e);if(void 0===n){if(we(e))n=new Set(e.getTypes());else{const t=this.getImplementations(e);n=new Set([...t.objects,...t.interfaces])}this._subTypeMap.set(e,n)}return n.has(t)}getDirectives(){return this._directives}getDirective(e){return this.getDirectives().find((t=>t.name===e))}getField(e,t){switch(t){case $t.name:return this.getQueryType()===e?$t:void 0;case Qt.name:return this.getQueryType()===e?Qt:void 0;case Ut.name:return Ut}if("getFields"in e)return e.getFields()[t]}toConfig(){return{description:this.description,query:this.getQueryType(),mutation:this.getMutationType(),subscription:this.getSubscriptionType(),types:Object.values(this.getTypeMap()),directives:this.getDirectives(),extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes,assumeValid:void 0!==this.__validationErrors}}}function jt(e,t){const n=Be(e);if(!t.has(n))if(t.add(n),we(n))for(const e of n.getTypes())jt(e,t);else if(Ae(n)||De(n)){for(const e of n.getInterfaces())jt(e,t);for(const e of Object.values(n.getFields())){jt(e.type,t);for(const n of e.args)jt(n.type,t)}}else if(xe(n))for(const e of Object.values(n.getFields()))jt(e.type,t);return t}function Bt(e){if(Mt(e),e.__validationErrors)return e.__validationErrors;const t=new SchemaValidationContext(e);!function(e){const t=e.schema;null==t.getQueryType()&&e.reportError("Query root type must be provided.",t.astNode);const n=new AccumulatorMap;for(const r of Object.values(d)){const i=t.getRootType(r);if(null!=i)if(Ae(i))n.add(i,r);else{const n=X(r),o=j(i);e.reportError(r===d.QUERY?`${n} root type must be Object type, it cannot be ${o}.`:`${n} root type must be Object type if provided, it cannot be ${o}.`,Yt(t,r)??i.astNode)}}for(const[r,i]of n)if(i.length>1){const n=z(i);e.reportError(`All root types must be different, "${r.name}" type is used as ${n} root types.`,i.map((e=>Yt(t,e))))}}(t),function(e){for(const t of e.schema.getDirectives())if(Et(t)){Jt(e,t);for(const n of t.args)Jt(e,n),Ce(n.type)||e.reportError(`The type of @${t.name}(${n.name}:) must be Input Type but got: ${j(n.type)}.`,n.astNode),We(n)&&null!=n.deprecationReason&&e.reportError(`Required argument @${t.name}(${n.name}:) cannot be deprecated.`,[nn(n.astNode),n.astNode?.type])}else e.reportError(`Expected directive but got: ${j(t)}.`,t?.astNode)}(t),function(e){const t=function(e){const t=new Set,n=[],r=Object.create(null);return i;function i(o){if(t.has(o))return;t.add(o),r[o.name]=n.length;const s=Object.values(o.getFields());for(const t of s)if(Re(t.type)&&xe(t.type.ofType)){const o=t.type.ofType,s=r[o.name];if(n.push(t),void 0===s)i(o);else{const t=n.slice(s),r=t.map((e=>e.name)).join(".");e.reportError(`Cannot reference Input Object "${o.name}" within itself through a series of non-null fields: "${r}".`,t.map((e=>e.astNode)))}n.pop()}r[o.name]=void 0}}(e),n=e.schema.getTypeMap();for(const r of Object.values(n))je(r)?(Pt(r)||Jt(e,r),Ae(r)||De(r)?(qt(e,r),Kt(e,r)):we(r)?Ht(e,r):ke(r)?Wt(e,r):xe(r)&&(Zt(e,r),t(r))):e.reportError(`Expected GraphQL named type but got: ${j(r)}.`,r.astNode)}(t);const n=t.getErrors();return e.__validationErrors=n,n}class SchemaValidationContext{constructor(e){this._errors=[],this.schema=e}reportError(e,t){const n=Array.isArray(t)?t.filter(Boolean):t;this._errors.push(new GraphQLError(e,{nodes:n}))}getErrors(){return this._errors}}function Yt(e,t){return[e.astNode,...e.extensionASTNodes].flatMap((e=>e?.operationTypes??[])).find((e=>e.operation===t))?.type}function Jt(e,t){t.name.startsWith("__")&&e.reportError(`Name "${t.name}" must not begin with "__", which is reserved by GraphQL introspection.`,t.astNode)}function qt(e,t){const n=Object.values(t.getFields());0===n.length&&e.reportError(`Type ${t.name} must define one or more fields.`,[t.astNode,...t.extensionASTNodes]);for(const r of n){Jt(e,r),Ge(r.type)||e.reportError(`The type of ${t.name}.${r.name} must be Output Type but got: ${j(r.type)}.`,r.astNode?.type);for(const n of r.args){const i=n.name;Jt(e,n),Ce(n.type)||e.reportError(`The type of ${t.name}.${r.name}(${i}:) must be Input Type but got: ${j(n.type)}.`,n.astNode?.type),We(n)&&null!=n.deprecationReason&&e.reportError(`Required argument ${t.name}.${r.name}(${i}:) cannot be deprecated.`,[nn(n.astNode),n.astNode?.type])}}}function Kt(e,t){const n=new Set;for(const r of t.getInterfaces())De(r)?t!==r?n.has(r.name)?e.reportError(`Type ${t.name} can only implement ${r.name} once.`,en(t,r)):(n.add(r.name),zt(e,t,r),Xt(e,t,r)):e.reportError(`Type ${t.name} cannot implement itself because it would create a circular reference.`,en(t,r)):e.reportError(`Type ${j(t)} must only implement Interface types, it cannot implement ${j(r)}.`,en(t,r))}function Xt(e,t,n){const r=t.getFields();for(const i of Object.values(n.getFields())){const o=i.name,s=r[o];if(s){it(e.schema,s.type,i.type)||e.reportError(`Interface field ${n.name}.${o} expects type ${j(i.type)} but ${t.name}.${o} is type ${j(s.type)}.`,[i.astNode?.type,s.astNode?.type]);for(const r of i.args){const i=r.name,a=s.args.find((e=>e.name===i));a?rt(r.type,a.type)||e.reportError(`Interface field argument ${n.name}.${o}(${i}:) expects type ${j(r.type)} but ${t.name}.${o}(${i}:) is type ${j(a.type)}.`,[r.astNode?.type,a.astNode?.type]):e.reportError(`Interface field argument ${n.name}.${o}(${i}:) expected but ${t.name}.${o} does not provide it.`,[r.astNode,s.astNode])}for(const r of s.args){const s=r.name;!i.args.find((e=>e.name===s))&&We(r)&&e.reportError(`Object field ${t.name}.${o} includes required argument ${s} that is missing from the Interface field ${n.name}.${o}.`,[r.astNode,i.astNode])}}else e.reportError(`Interface field ${n.name}.${o} expected but ${t.name} does not provide it.`,[i.astNode,t.astNode,...t.extensionASTNodes])}}function zt(e,t,n){const r=t.getInterfaces();for(const i of n.getInterfaces())r.includes(i)||e.reportError(i===t?`Type ${t.name} cannot implement ${n.name} because it would create a circular reference.`:`Type ${t.name} must implement ${i.name} because it is implemented by ${n.name}.`,[...en(n,i),...en(t,n)])}function Ht(e,t){const n=t.getTypes();0===n.length&&e.reportError(`Union type ${t.name} must define one or more member types.`,[t.astNode,...t.extensionASTNodes]);const r=new Set;for(const i of n)r.has(i.name)?e.reportError(`Union type ${t.name} can only include type ${i.name} once.`,tn(t,i.name)):(r.add(i.name),Ae(i)||e.reportError(`Union type ${t.name} can only include Object types, it cannot include ${j(i)}.`,tn(t,String(i))))}function Wt(e,t){const n=t.getValues();0===n.length&&e.reportError(`Enum type ${t.name} must define one or more values.`,[t.astNode,...t.extensionASTNodes]);for(const t of n)Jt(e,t)}function Zt(e,t){const n=Object.values(t.getFields());0===n.length&&e.reportError(`Input Object type ${t.name} must define one or more fields.`,[t.astNode,...t.extensionASTNodes]);for(const r of n)Jt(e,r),Ce(r.type)||e.reportError(`The type of ${t.name}.${r.name} must be Input Type but got: ${j(r.type)}.`,r.astNode?.type),nt(r)&&null!=r.deprecationReason&&e.reportError(`Required input field ${t.name}.${r.name} cannot be deprecated.`,[nn(r.astNode),r.astNode?.type])}function en(e,t){const{astNode:n,extensionASTNodes:r}=e;return(null!=n?[n,...r]:r).flatMap((e=>e.interfaces??[])).filter((e=>e.name.value===t.name))}function tn(e,t){const{astNode:n,extensionASTNodes:r}=e;return(null!=n?[n,...r]:r).flatMap((e=>e.types??[])).filter((e=>e.name.value===t))}function nn(e){return e?.directives?.find((e=>e.name.value===gt.name))}function rn(e,t){switch(t.kind){case h.LIST_TYPE:{const n=rn(e,t.type);return n&&new GraphQLList(n)}case h.NON_NULL_TYPE:{const n=rn(e,t.type);return n&&new GraphQLNonNull(n)}case h.NAMED_TYPE:return e.getType(t.name.value)}}class TypeInfo{constructor(e,t,n){this._schema=e,this._typeStack=[],this._parentTypeStack=[],this._inputTypeStack=[],this._fieldDefStack=[],this._defaultValueStack=[],this._directive=null,this._argument=null,this._enumValue=null,this._getFieldDef=n??on,t&&(Ce(t)&&this._inputTypeStack.push(t),Qe(t)&&this._parentTypeStack.push(t),Ge(t)&&this._typeStack.push(t))}get[Symbol.toStringTag](){return"TypeInfo"}getType(){if(this._typeStack.length>0)return this._typeStack[this._typeStack.length-1]}getParentType(){if(this._parentTypeStack.length>0)return this._parentTypeStack[this._parentTypeStack.length-1]}getInputType(){if(this._inputTypeStack.length>0)return this._inputTypeStack[this._inputTypeStack.length-1]}getParentInputType(){if(this._inputTypeStack.length>1)return this._inputTypeStack[this._inputTypeStack.length-2]}getFieldDef(){if(this._fieldDefStack.length>0)return this._fieldDefStack[this._fieldDefStack.length-1]}getDefaultValue(){if(this._defaultValueStack.length>0)return this._defaultValueStack[this._defaultValueStack.length-1]}getDirective(){return this._directive}getArgument(){return this._argument}getEnumValue(){return this._enumValue}enter(e){const t=this._schema;switch(e.kind){case h.SELECTION_SET:{const e=Be(this.getType());this._parentTypeStack.push(Qe(e)?e:void 0);break}case h.FIELD:{const n=this.getParentType();let r,i;n&&(r=this._getFieldDef(t,n,e),r&&(i=r.type)),this._fieldDefStack.push(r),this._typeStack.push(Ge(i)?i:void 0);break}case h.DIRECTIVE:this._directive=t.getDirective(e.name.value);break;case h.OPERATION_DEFINITION:{const n=t.getRootType(e.operation);this._typeStack.push(Ae(n)?n:void 0);break}case h.INLINE_FRAGMENT:case h.FRAGMENT_DEFINITION:{const n=e.typeCondition,r=n?rn(t,n):Be(this.getType());this._typeStack.push(Ge(r)?r:void 0);break}case h.VARIABLE_DEFINITION:{const n=rn(t,e.type);this._inputTypeStack.push(Ce(n)?n:void 0);break}case h.ARGUMENT:{let t,n;const r=this.getDirective()??this.getFieldDef();r&&(t=r.args.find((t=>t.name===e.name.value)),t&&(n=t.type)),this._argument=t,this._defaultValueStack.push(t?t.defaultValue:void 0),this._inputTypeStack.push(Ce(n)?n:void 0);break}case h.LIST:{const e=Me(this.getInputType()),t=Fe(e)?e.ofType:e;this._defaultValueStack.push(void 0),this._inputTypeStack.push(Ce(t)?t:void 0);break}case h.OBJECT_FIELD:{const t=Be(this.getInputType());let n,r;xe(t)&&(r=t.getFields()[e.name.value],r&&(n=r.type)),this._defaultValueStack.push(r?r.defaultValue:void 0),this._inputTypeStack.push(Ce(n)?n:void 0);break}case h.ENUM:{const t=Be(this.getInputType());let n;ke(t)&&(n=t.getValue(e.value)),this._enumValue=n;break}}}leave(e){switch(e.kind){case h.SELECTION_SET:this._parentTypeStack.pop();break;case h.FIELD:this._fieldDefStack.pop(),this._typeStack.pop();break;case h.DIRECTIVE:this._directive=null;break;case h.OPERATION_DEFINITION:case h.INLINE_FRAGMENT:case h.FRAGMENT_DEFINITION:this._typeStack.pop();break;case h.VARIABLE_DEFINITION:this._inputTypeStack.pop();break;case h.ARGUMENT:this._argument=null,this._defaultValueStack.pop(),this._inputTypeStack.pop();break;case h.LIST:case h.OBJECT_FIELD:this._defaultValueStack.pop(),this._inputTypeStack.pop();break;case h.ENUM:this._enumValue=null}}}function on(e,t,n){return e.getField(t,n.name.value)}function sn(e,t){return{enter(...n){const r=n[0];e.enter(r);const i=me(t,r.kind).enter;if(i){const o=i.apply(t,n);return void 0!==o&&(e.leave(r),p(o)&&e.enter(o)),o}},leave(...n){const r=n[0],i=me(t,r.kind).leave;let o;return i&&(o=i.apply(t,n)),e.leave(r),o}}}function an(e){return e.kind===h.OPERATION_DEFINITION||e.kind===h.FRAGMENT_DEFINITION}function cn(e){return e.kind===h.SCALAR_TYPE_DEFINITION||e.kind===h.OBJECT_TYPE_DEFINITION||e.kind===h.INTERFACE_TYPE_DEFINITION||e.kind===h.UNION_TYPE_DEFINITION||e.kind===h.ENUM_TYPE_DEFINITION||e.kind===h.INPUT_OBJECT_TYPE_DEFINITION}function un(e){return e.kind===h.SCALAR_TYPE_EXTENSION||e.kind===h.OBJECT_TYPE_EXTENSION||e.kind===h.INTERFACE_TYPE_EXTENSION||e.kind===h.UNION_TYPE_EXTENSION||e.kind===h.ENUM_TYPE_EXTENSION||e.kind===h.INPUT_OBJECT_TYPE_EXTENSION}function ln(e){const t=Object.create(null),n=e.getSchema(),r=n?n.getDirectives():St;for(const e of r)t[e.name]=e.args.map((e=>e.name));const i=e.getDocument().definitions;for(const e of i)if(e.kind===h.DIRECTIVE_DEFINITION){const n=e.arguments??[];t[e.name.value]=n.map((e=>e.name.value))}return{Directive(n){const r=n.name.value,i=t[r];if(n.arguments&&i)for(const t of n.arguments){const n=t.name.value;if(!i.includes(n)){const o=se(n,i);e.reportError(new GraphQLError(`Unknown argument "${n}" on directive "@${r}".`+W(o),{nodes:t}))}}return!1}}}function pn(e){const t=Object.create(null),r=e.getSchema(),i=r?r.getDirectives():St;for(const e of i)t[e.name]=e.locations;const o=e.getDocument().definitions;for(const e of o)e.kind===h.DIRECTIVE_DEFINITION&&(t[e.name.value]=e.locations.map((e=>e.value)));return{Directive(r,i,o,s,a){const c=r.name.value,u=t[c];if(!u)return void e.reportError(new GraphQLError(`Unknown directive "@${c}".`,{nodes:r}));const l=function(e){const t=e[e.length-1];switch("kind"in t||n(!1),t.kind){case h.OPERATION_DEFINITION:return function(e){switch(e){case d.QUERY:return f.QUERY;case d.MUTATION:return f.MUTATION;case d.SUBSCRIPTION:return f.SUBSCRIPTION}}(t.operation);case h.FIELD:return f.FIELD;case h.FRAGMENT_SPREAD:return f.FRAGMENT_SPREAD;case h.INLINE_FRAGMENT:return f.INLINE_FRAGMENT;case h.FRAGMENT_DEFINITION:return f.FRAGMENT_DEFINITION;case h.VARIABLE_DEFINITION:return f.VARIABLE_DEFINITION;case h.SCHEMA_DEFINITION:case h.SCHEMA_EXTENSION:return f.SCHEMA;case h.SCALAR_TYPE_DEFINITION:case h.SCALAR_TYPE_EXTENSION:return f.SCALAR;case h.OBJECT_TYPE_DEFINITION:case h.OBJECT_TYPE_EXTENSION:return f.OBJECT;case h.FIELD_DEFINITION:return f.FIELD_DEFINITION;case h.INTERFACE_TYPE_DEFINITION:case h.INTERFACE_TYPE_EXTENSION:return f.INTERFACE;case h.UNION_TYPE_DEFINITION:case h.UNION_TYPE_EXTENSION:return f.UNION;case h.ENUM_TYPE_DEFINITION:case h.ENUM_TYPE_EXTENSION:return f.ENUM;case h.ENUM_VALUE_DEFINITION:return f.ENUM_VALUE;case h.INPUT_OBJECT_TYPE_DEFINITION:case h.INPUT_OBJECT_TYPE_EXTENSION:return f.INPUT_OBJECT;case h.INPUT_VALUE_DEFINITION:{const t=e[e.length-3];return"kind"in t||n(!1),t.kind===h.INPUT_OBJECT_TYPE_DEFINITION?f.INPUT_FIELD_DEFINITION:f.ARGUMENT_DEFINITION}default:n(!1,"Unexpected kind: "+j(t.kind))}}(a);l&&!u.includes(l)&&e.reportError(new GraphQLError(`Directive "@${c}" may not be used on ${l}.`,{nodes:r}))}}}function dn(e){const{definitions:t}=e.getDocument(),n=e.getSchema()?.getTypeMap()??{},r=new Set([...Object.keys(n),...t.filter(cn).map((e=>e.name.value))]);return{NamedType(t,n,i,o,s){const a=t.name.value;if(!r.has(a)){const n=s[2]??i,o=null!=n&&("kind"in(c=n)&&(function(e){return e.kind===h.SCHEMA_DEFINITION||cn(e)||e.kind===h.DIRECTIVE_DEFINITION}(c)||function(e){return e.kind===h.SCHEMA_EXTENSION||un(e)}(c)));if(o&&fn.has(a))return;const u=se(a,o?[...fn,...r]:[...r]);e.reportError(new GraphQLError(`Unknown type "${a}".`+W(u),{nodes:t}))}var c}}}const fn=new Set([...ft,...Vt].map((e=>e.name)));function hn(e){const t=new Set,n=[];return{OperationDefinition(n){for(const r of e.getRecursivelyReferencedFragments(n))t.add(r.name.value);return!1},FragmentDefinition:e=>(n.push(e),!1),Document:{leave(){for(const r of n){const n=r.name.value;t.has(n)||e.reportError(new GraphQLError(`Fragment "${n}" is never used.`,{nodes:r}))}}}}}function mn(e){switch(e.kind){case h.OBJECT:return{...e,fields:(t=e.fields,t.map((e=>({...e,value:mn(e.value)}))).sort(((e,t)=>re(e.name.value,t.name.value))))};case h.LIST:return{...e,values:e.values.map(mn)};case h.INT:case h.FLOAT:case h.STRING:case h.BOOLEAN:case h.NULL:case h.ENUM:case h.VARIABLE:return e}var t}function En(e){return Array.isArray(e)?e.map((([e,t])=>`subfields "${e}" conflict because `+En(t))).join(" and "):e}function Tn(e,t,n,r,i,o,s){const a=e.getFragment(s);if(!a)return;const[c,u]=On(e,n,a);if(o!==c){Nn(e,t,n,r,i,o,c);for(const a of u)r.has(a,s,i)||(r.add(a,s,i),Tn(e,t,n,r,i,o,a))}}function yn(e,t,n,r,i,o,s){if(o===s)return;if(r.has(o,s,i))return;r.add(o,s,i);const a=e.getFragment(o),c=e.getFragment(s);if(!a||!c)return;const[u,l]=On(e,n,a),[p,d]=On(e,n,c);Nn(e,t,n,r,i,u,p);for(const s of d)yn(e,t,n,r,i,o,s);for(const o of l)yn(e,t,n,r,i,o,s)}function Nn(e,t,n,r,i,o,s){for(const[a,c]of Object.entries(o)){const o=s[a];if(o)for(const s of c)for(const c of o){const o=vn(e,n,r,i,a,s,c);o&&t.push(o)}}}function vn(e,t,n,r,i,o,s){const[a,c,u]=o,[l,p,d]=s,f=r||a!==l&&Ae(a)&&Ae(l);if(!f){const e=c.name.value,t=p.name.value;if(e!==t)return[[i,`"${e}" and "${t}" are different fields`],[c],[p]];if(In(c)!==In(p))return[[i,"they have differing arguments"],[c],[p]]}if(!function(e,t){const n=gn(e),r=gn(t);if(!n&&!r)return!0;if(n&&r)return In(n)===In(r);return!1}(c.directives??[],p.directives??[]))return[[i,"they have differing stream directives"],[c],[p]];const h=u?.type,m=d?.type;if(h&&m&&_n(h,m))return[[i,`they return conflicting types "${j(h)}" and "${j(m)}"`],[c],[p]];const E=c.selectionSet,T=p.selectionSet;if(E&&T){return function(e,t,n,r){if(e.length>0)return[[t,e.map((([e])=>e))],[n,...e.map((([,e])=>e)).flat()],[r,...e.map((([,,e])=>e)).flat()]]}(function(e,t,n,r,i,o,s,a){const c=[],[u,l]=Sn(e,t,i,o),[p,d]=Sn(e,t,s,a);Nn(e,c,t,n,r,u,p);for(const i of d)Tn(e,c,t,n,r,u,i);for(const i of l)Tn(e,c,t,n,r,p,i);for(const i of l)for(const o of d)yn(e,c,t,n,r,i,o);return c}(e,t,n,f,Be(h),E,Be(m),T),i,c,p)}}function In(e){const t=e.arguments??[];return Ee(mn({kind:h.OBJECT,fields:t.map((e=>({kind:h.OBJECT_FIELD,name:e.name,value:e.value})))}))}function gn(e){return e.find((e=>"stream"===e.name.value))}function _n(e,t){return Fe(e)?!Fe(t)||_n(e.ofType,t.ofType):!!Fe(t)||(Re(e)?!Re(t)||_n(e.ofType,t.ofType):!!Re(t)||!(!$e(e)&&!$e(t))&&e!==t)}function Sn(e,t,n,r){const i=t.get(r);if(i)return i;const o=Object.create(null),s=new Set;bn(e,n,r,o,s);const a=[o,[...s]];return t.set(r,a),a}function On(e,t,n){const r=t.get(n.selectionSet);if(r)return r;const i=rn(e.getSchema(),n.typeCondition);return Sn(e,t,i,n.selectionSet)}function bn(e,t,n,r,i){for(const o of n.selections)switch(o.kind){case h.FIELD:{const e=o.name.value;let n;(Ae(t)||De(t))&&(n=t.getFields()[e]);const i=o.alias?o.alias.value:e;r[i]||(r[i]=[]),r[i].push([t,o,n]);break}case h.FRAGMENT_SPREAD:i.add(o.name.value);break;case h.INLINE_FRAGMENT:{const n=o.typeCondition,s=n?rn(e.getSchema(),n):t;bn(e,s,o.selectionSet,r,i);break}}}class PairSet{constructor(){this._data=new Map}has(e,t,n){const[r,i]=e<t?[e,t]:[t,e],o=this._data.get(r)?.get(i);return void 0!==o&&(!!n||n===o)}add(e,t,n){const[r,i]=e<t?[e,t]:[t,e],o=this._data.get(r);void 0===o?this._data.set(r,new Map([[i,n]])):o.set(i,n)}}const Ln={[h.SCALAR_TYPE_DEFINITION]:h.SCALAR_TYPE_EXTENSION,[h.OBJECT_TYPE_DEFINITION]:h.OBJECT_TYPE_EXTENSION,[h.INTERFACE_TYPE_DEFINITION]:h.INTERFACE_TYPE_EXTENSION,[h.UNION_TYPE_DEFINITION]:h.UNION_TYPE_EXTENSION,[h.ENUM_TYPE_DEFINITION]:h.ENUM_TYPE_EXTENSION,[h.INPUT_OBJECT_TYPE_DEFINITION]:h.INPUT_OBJECT_TYPE_EXTENSION};function An(e){const t=Object.create(null),n=e.getSchema()?.getDirectives()??St;for(const e of n)t[e.name]=ee(e.args.filter(We),(e=>e.name));const r=e.getDocument().definitions;for(const e of r)if(e.kind===h.DIRECTIVE_DEFINITION){const n=e.arguments??[];t[e.name.value]=ee(n.filter(Dn),(e=>e.name.value))}return{Directive:{leave(n){const r=n.name.value,i=t[r];if(i){const t=n.arguments??[],o=new Set(t.map((e=>e.name.value)));for(const[t,s]of Object.entries(i))if(!o.has(t)){const i=be(s.type)?j(s.type):Ee(s.type);e.reportError(new GraphQLError(`Directive "@${r}" argument "${t}" of type "${i}" is required, but it was not provided.`,{nodes:n}))}}}}}}function Dn(e){return e.type.kind===h.NON_NULL_TYPE&&null==e.defaultValue}function wn(e,t,r){if(e){if(e.kind===h.VARIABLE){const n=e.name.value;if(null==r||void 0===r[n])return;const i=r[n];if(null===i&&Re(t))return;return i}if(Re(t)){if(e.kind===h.NULL)return;return wn(e,t.ofType,r)}if(e.kind===h.NULL)return null;if(Fe(t)){const n=t.ofType;if(e.kind===h.LIST){const t=[];for(const i of e.values)if(kn(i,r)){if(Re(n))return;t.push(null)}else{const e=wn(i,n,r);if(void 0===e)return;t.push(e)}return t}const i=wn(e,n,r);if(void 0===i)return;return[i]}if(xe(t)){if(e.kind!==h.OBJECT)return;const n=Object.create(null),i=ee(e.fields,(e=>e.name.value));for(const e of Object.values(t.getFields())){const t=i[e.name];if(!t||kn(t.value,r)){if(void 0!==e.defaultValue)n[e.name]=e.defaultValue;else if(Re(e.type))return;continue}const o=wn(t.value,e.type,r);if(void 0===o)return;n[e.name]=o}return n}if($e(t)){let n;try{n=t.parseLiteral(e,r)}catch(e){return}if(void 0===n)return;return n}n(!1,"Unexpected input type: "+j(t))}}function kn(e,t){return e.kind===h.VARIABLE&&(null==t||void 0===t[e.name.value])}function xn(e,t,n){const r=t.directives?.find((t=>t.name.value===e.name));if(r)return function(e,t,n){const r={},i=ee(t.arguments??[],(e=>e.name.value));for(const a of e.args){const e=a.name,c=a.type,u=i[e];if(!u){if(void 0!==a.defaultValue)r[e]=a.defaultValue;else if(Re(c))throw new GraphQLError(`Argument "${e}" of required type "${j(c)}" was not provided.`,{nodes:t});continue}const l=u.value;let p=l.kind===h.NULL;if(l.kind===h.VARIABLE){const t=l.name.value;if(null==n||(o=n,s=t,!Object.prototype.hasOwnProperty.call(o,s))){if(void 0!==a.defaultValue)r[e]=a.defaultValue;else if(Re(c))throw new GraphQLError(`Argument "${e}" of required type "${j(c)}" was provided the variable "$${t}" which was not provided a runtime value.`,{nodes:l});continue}p=null==n[t]}if(p&&Re(c))throw new GraphQLError(`Argument "${e}" of non-null type "${j(c)}" must not be null.`,{nodes:l});const d=wn(l,c,n);if(void 0===d)throw new GraphQLError(`Argument "${e}" has invalid value ${Ee(l)}.`,{nodes:l});r[e]=d}var o,s;return r}(e,r,n)}function Fn(e,t,n,r,i){const o=new AccumulatorMap,s=[];return Rn(e,t,n,r,i,o,s,new Set),{fields:o,patches:s}}function Rn(e,t,n,r,i,o,s,a){for(const u of i.selections)switch(u.kind){case h.FIELD:if(!Gn(n,u))continue;o.add((c=u).alias?c.alias.value:c.name.value,u);break;case h.INLINE_FRAGMENT:{if(!Gn(n,u)||!$n(e,u,r))continue;const i=Cn(n,u);if(i){const o=new AccumulatorMap;Rn(e,t,n,r,u.selectionSet,o,s,a),s.push({label:i.label,fields:o})}else Rn(e,t,n,r,u.selectionSet,o,s,a);break}case h.FRAGMENT_SPREAD:{const i=u.name.value;if(!Gn(n,u))continue;const c=Cn(n,u);if(a.has(i)&&!c)continue;const l=t[i];if(!l||!$n(e,l,r))continue;if(c||a.add(i),c){const i=new AccumulatorMap;Rn(e,t,n,r,l.selectionSet,i,s,a),s.push({label:c.label,fields:i})}else Rn(e,t,n,r,l.selectionSet,o,s,a);break}}var c}function Cn(e,t){const n=xn(Nt,t,e);if(n&&!1!==n.if)return{label:"string"==typeof n.label?n.label:void 0}}function Gn(e,t){if(!0===xn(yt,t,e)?.if)return!1;return!1!==xn(Tt,t,e)?.if}function $n(e,t,n){const r=t.typeCondition;if(!r)return!0;const i=rn(e,r);return i===n||!!Ue(i)&&e.isSubType(i,n)}function Qn(e,t){const n=new AccumulatorMap;for(const r of e)n.add(t(r),r);return n}function Un(e){return{Field:t,Directive:t};function t(t){const n=Qn(t.arguments??[],(e=>e.name.value));for(const[t,r]of n)r.length>1&&e.reportError(new GraphQLError(`There can be only one argument named "${t}".`,{nodes:r.map((e=>e.name))}))}}function Vn(e){const t=Object.create(null),n=e.getSchema(),r=n?n.getDirectives():St;for(const e of r)t[e.name]=!e.isRepeatable;const i=e.getDocument().definitions;for(const e of i)e.kind===h.DIRECTIVE_DEFINITION&&(t[e.name.value]=!e.repeatable);const o=Object.create(null),s=Object.create(null);return{enter(n){if(!("directives"in n)||!n.directives)return;let r;if(n.kind===h.SCHEMA_DEFINITION||n.kind===h.SCHEMA_EXTENSION)r=o;else if(cn(n)||un(n)){const e=n.name.value;r=s[e],void 0===r&&(s[e]=r=Object.create(null))}else r=Object.create(null);for(const i of n.directives){const n=i.name.value;t[n]&&(r[n]?e.reportError(new GraphQLError(`The directive "@${n}" can only be used once at this location.`,{nodes:[r[n],i]})):r[n]=i)}}}}function Pn(e,t){return!!(Ae(e)||De(e)||xe(e))&&null!=e.getFields()[t]}function Mn(e){const t=[];let r=Object.create(null);return{ObjectValue:{enter(){t.push(r),r=Object.create(null)},leave(){const e=t.pop();null!=e||n(!1),r=e}},ObjectField(t){const n=t.name.value;r[n]?e.reportError(new GraphQLError(`There can be only one input field named "${n}".`,{nodes:[r[n],t.name]})):r[n]=t.name}}}function jn(e,t){const n=e.getInputType();if(!n)return;const r=Be(n);if($e(r))try{if(void 0===r.parseLiteral(t,void 0)){const r=j(n);e.reportError(new GraphQLError(`Expected value of type "${r}", found ${Ee(t)}.`,{nodes:t}))}}catch(r){const i=j(n);r instanceof GraphQLError?e.reportError(r):e.reportError(new GraphQLError(`Expected value of type "${i}", found ${Ee(t)}; `+r.message,{nodes:t,originalError:r}))}else{const r=j(n);e.reportError(new GraphQLError(`Expected value of type "${r}", found ${Ee(t)}.`,{nodes:t}))}}function Bn(e,t,n,r,i){if(Re(r)&&!Re(t)){const o=void 0!==i;if(!(null!=n&&n.kind!==h.NULL)&&!o)return!1;return it(e,t,r.ofType)}return it(e,t,r)}const Yn=Object.freeze([function(e){return{Document(t){for(const n of t.definitions)if(!an(n)){const t=n.kind===h.SCHEMA_DEFINITION||n.kind===h.SCHEMA_EXTENSION?"schema":'"'+n.name.value+'"';e.reportError(new GraphQLError(`The ${t} definition is not executable.`,{nodes:n}))}return!1}}},function(e){const t=Object.create(null);return{OperationDefinition(n){const r=n.name;return r&&(t[r.value]?e.reportError(new GraphQLError(`There can be only one operation named "${r.value}".`,{nodes:[t[r.value],r]})):t[r.value]=r),!1},FragmentDefinition:()=>!1}},function(e){let t=0;return{Document(e){t=e.definitions.filter((e=>e.kind===h.OPERATION_DEFINITION)).length},OperationDefinition(n){!n.name&&t>1&&e.reportError(new GraphQLError("This anonymous operation must be the only defined operation.",{nodes:n}))}}},function(e){return{OperationDefinition(t){if("subscription"===t.operation){const n=e.getSchema(),r=n.getSubscriptionType();if(r){const i=t.name?t.name.value:null,o=Object.create(null),s=e.getDocument(),a=Object.create(null);for(const e of s.definitions)e.kind===h.FRAGMENT_DEFINITION&&(a[e.name.value]=e);const{fields:c}=Fn(n,a,o,r,t.selectionSet);if(c.size>1){const t=[...c.values()].slice(1).flat();e.reportError(new GraphQLError(null!=i?`Subscription "${i}" must select only one top level field.`:"Anonymous Subscription must select only one top level field.",{nodes:t}))}for(const t of c.values()){t[0].name.value.startsWith("__")&&e.reportError(new GraphQLError(null!=i?`Subscription "${i}" must not select an introspection top level field.`:"Anonymous Subscription must not select an introspection top level field.",{nodes:t}))}}}}}},dn,function(e){return{InlineFragment(t){const n=t.typeCondition;if(n){const t=rn(e.getSchema(),n);if(t&&!Qe(t)){const t=Ee(n);e.reportError(new GraphQLError(`Fragment cannot condition on non composite type "${t}".`,{nodes:n}))}}},FragmentDefinition(t){const n=rn(e.getSchema(),t.typeCondition);if(n&&!Qe(n)){const n=Ee(t.typeCondition);e.reportError(new GraphQLError(`Fragment "${t.name.value}" cannot condition on non composite type "${n}".`,{nodes:t.typeCondition}))}}}},function(e){return{VariableDefinition(t){const n=rn(e.getSchema(),t.type);if(void 0!==n&&!Ce(n)){const n=t.variable.name.value,r=Ee(t.type);e.reportError(new GraphQLError(`Variable "$${n}" cannot be non-input type "${r}".`,{nodes:t.type}))}}}},function(e){return{Field(t){const n=e.getType(),r=t.selectionSet;if(n)if($e(Be(n))){if(r){const i=t.name.value,o=j(n);e.reportError(new GraphQLError(`Field "${i}" must not have a selection since type "${o}" has no subfields.`,{nodes:r}))}}else if(!r){const r=t.name.value,i=j(n);e.reportError(new GraphQLError(`Field "${r}" of type "${i}" must have a selection of subfields. Did you mean "${r} { ... }"?`,{nodes:t}))}}}},function(e){return{Field(t){const n=e.getParentType();if(n){if(!e.getFieldDef()){const r=e.getSchema(),i=t.name.value;let o=W("to use an inline fragment on",function(e,t,n){if(!Ue(t))return[];const r=new Set,i=Object.create(null);for(const o of e.getPossibleTypes(t))if(o.getFields()[n]){r.add(o),i[o.name]=1;for(const e of o.getInterfaces())e.getFields()[n]&&(r.add(e),i[e.name]=(i[e.name]??0)+1)}return[...r].sort(((t,n)=>{const r=i[n.name]-i[t.name];return 0!==r?r:De(t)&&e.isSubType(t,n)?-1:De(n)&&e.isSubType(n,t)?1:re(t.name,n.name)})).map((e=>e.name))}(r,n,i));""===o&&(o=W(function(e,t){if(Ae(e)||De(e)){return se(t,Object.keys(e.getFields()))}return[]}(n,i))),e.reportError(new GraphQLError(`Cannot query field "${i}" on type "${n.name}".`+o,{nodes:t}))}}}}},function(e){const t=Object.create(null);return{OperationDefinition:()=>!1,FragmentDefinition(n){const r=n.name.value;return t[r]?e.reportError(new GraphQLError(`There can be only one fragment named "${r}".`,{nodes:[t[r],n.name]})):t[r]=n.name,!1}}},function(e){return{FragmentSpread(t){const n=t.name.value;e.getFragment(n)||e.reportError(new GraphQLError(`Unknown fragment "${n}".`,{nodes:t.name}))}}},hn,function(e){return{InlineFragment(t){const n=e.getType(),r=e.getParentType();if(Qe(n)&&Qe(r)&&!ot(e.getSchema(),n,r)){const i=j(r),o=j(n);e.reportError(new GraphQLError(`Fragment cannot be spread here as objects of type "${i}" can never be of type "${o}".`,{nodes:t}))}},FragmentSpread(t){const n=t.name.value,r=function(e,t){const n=e.getFragment(t);if(n){const t=rn(e.getSchema(),n.typeCondition);if(Qe(t))return t}}(e,n),i=e.getParentType();if(r&&i&&!ot(e.getSchema(),r,i)){const o=j(i),s=j(r);e.reportError(new GraphQLError(`Fragment "${n}" cannot be spread here as objects of type "${o}" can never be of type "${s}".`,{nodes:t}))}}}},function(e){const t=new Set,n=[],r=Object.create(null);return{OperationDefinition:()=>!1,FragmentDefinition:e=>(i(e),!1)};function i(o){if(t.has(o.name.value))return;const s=o.name.value;t.add(s);const a=e.getFragmentSpreads(o.selectionSet);if(0!==a.length){r[s]=n.length;for(const t of a){const o=t.name.value,s=r[o];if(n.push(t),void 0===s){const t=e.getFragment(o);t&&i(t)}else{const t=n.slice(s),r=t.slice(0,-1).map((e=>'"'+e.name.value+'"')).join(", ");e.reportError(new GraphQLError(`Cannot spread fragment "${o}" within itself`+(""!==r?` via ${r}.`:"."),{nodes:t}))}n.pop()}r[s]=void 0}}},function(e){return{OperationDefinition(t){const n=Qn(t.variableDefinitions??[],(e=>e.variable.name.value));for(const[t,r]of n)r.length>1&&e.reportError(new GraphQLError(`There can be only one variable named "$${t}".`,{nodes:r.map((e=>e.variable.name))}))}}},function(e){return{OperationDefinition(t){const n=new Set(t.variableDefinitions?.map((e=>e.variable.name.value))),r=e.getRecursiveVariableUsages(t);for(const{node:i}of r){const r=i.name.value;n.has(r)||e.reportError(new GraphQLError(t.name?`Variable "$${r}" is not defined by operation "${t.name.value}".`:`Variable "$${r}" is not defined.`,{nodes:[i,t]}))}}}},function(e){return{OperationDefinition(t){const n=e.getRecursiveVariableUsages(t),r=new Set(n.map((({node:e})=>e.name.value))),i=t.variableDefinitions??[];for(const n of i){const i=n.variable.name.value;r.has(i)||e.reportError(new GraphQLError(t.name?`Variable "$${i}" is never used in operation "${t.name.value}".`:`Variable "$${i}" is never used.`,{nodes:n}))}}}},pn,Vn,function(e){return{Directive(t){const n=e.getSchema().getMutationType(),r=e.getSchema().getSubscriptionType(),i=e.getParentType();i&&t.name.value===Nt.name&&(n&&i===n&&e.reportError(new GraphQLError(`Defer directive cannot be used on root mutation type "${i.name}".`,{nodes:t})),r&&i===r&&e.reportError(new GraphQLError(`Defer directive cannot be used on root subscription type "${i.name}".`,{nodes:t}))),i&&t.name.value===vt.name&&(n&&i===n&&e.reportError(new GraphQLError(`Stream directive cannot be used on root mutation type "${i.name}".`,{nodes:t})),r&&i===r&&e.reportError(new GraphQLError(`Stream directive cannot be used on root subscription type "${i.name}".`,{nodes:t})))}}},function(e){const t=Object.create(null);return{Directive(n){if(n.name.value===Nt.name||n.name.value===vt.name){const r=n.arguments?.find((e=>"label"===e.name.value)),i=r?.value;if(!i)return;i.kind!==h.STRING?e.reportError(new GraphQLError(`Directive "${n.name.value}"'s label argument must be a static string.`,{nodes:n})):t[i.value]?e.reportError(new GraphQLError("Defer/Stream directive label argument must be unique.",{nodes:[t[i.value],n]})):t[i.value]=n}}}},function(e){return{Directive(t){const n=e.getFieldDef(),r=e.getParentType();n&&r&&t.name.value===vt.name&&!(Fe(n.type)||Ve(n.type)&&Fe(n.type.ofType))&&e.reportError(new GraphQLError(`Stream directive cannot be used on non-list field "${n.name}" on type "${r.name}".`,{nodes:t}))}}},function(e){return{...ln(e),Argument(t){const n=e.getArgument(),r=e.getFieldDef(),i=e.getParentType();if(!n&&r&&i){const n=t.name.value,o=se(n,r.args.map((e=>e.name)));e.reportError(new GraphQLError(`Unknown argument "${n}" on field "${i.name}.${r.name}".`+W(o),{nodes:t}))}}}},Un,function(e){return{ListValue(t){if(!Fe(Me(e.getParentInputType())))return jn(e,t),!1},ObjectValue(t){const n=Be(e.getInputType());if(!xe(n))return jn(e,t),!1;const r=ee(t.fields,(e=>e.name.value));for(const i of Object.values(n.getFields())){if(!r[i.name]&&nt(i)){const r=j(i.type);e.reportError(new GraphQLError(`Field "${n.name}.${i.name}" of required type "${r}" was not provided.`,{nodes:t}))}}},ObjectField(t){const n=Be(e.getParentInputType());if(!e.getInputType()&&xe(n)){const r=se(t.name.value,Object.keys(n.getFields()));e.reportError(new GraphQLError(`Field "${t.name.value}" is not defined by type "${n.name}".`+W(r),{nodes:t}))}},NullValue(t){const n=e.getInputType();Re(n)&&e.reportError(new GraphQLError(`Expected value of type "${j(n)}", found ${Ee(t)}.`,{nodes:t}))},EnumValue:t=>jn(e,t),IntValue:t=>jn(e,t),FloatValue:t=>jn(e,t),StringValue:t=>jn(e,t),BooleanValue:t=>jn(e,t)}},function(e){return{...An(e),Field:{leave(t){const n=e.getFieldDef();if(!n)return!1;const r=new Set(t.arguments?.map((e=>e.name.value)));for(const i of n.args)if(!r.has(i.name)&&We(i)){const r=j(i.type);e.reportError(new GraphQLError(`Field "${n.name}" argument "${i.name}" of type "${r}" is required, but it was not provided.`,{nodes:t}))}}}}},function(e){let t=Object.create(null);return{OperationDefinition:{enter(){t=Object.create(null)},leave(n){const r=e.getRecursiveVariableUsages(n);for(const{node:n,type:i,defaultValue:o}of r){const r=n.name.value,s=t[r];if(s&&i){const t=e.getSchema(),a=rn(t,s.type);if(a&&!Bn(t,a,s.defaultValue,i,o)){const t=j(a),o=j(i);e.reportError(new GraphQLError(`Variable "$${r}" of type "${t}" used in position expecting type "${o}".`,{nodes:[s,n]}))}}}}},VariableDefinition(e){t[e.variable.name.value]=e}}},function(e){const t=new PairSet,n=new Map;return{SelectionSet(r){const i=function(e,t,n,r,i){const o=[],[s,a]=Sn(e,t,r,i);if(function(e,t,n,r,i){for(const[o,s]of Object.entries(i))if(s.length>1)for(let i=0;i<s.length;i++)for(let a=i+1;a<s.length;a++){const c=vn(e,n,r,!1,o,s[i],s[a]);c&&t.push(c)}}(e,o,t,n,s),0!==a.length)for(let r=0;r<a.length;r++){Tn(e,o,t,n,!1,s,a[r]);for(let i=r+1;i<a.length;i++)yn(e,o,t,n,!1,a[r],a[i])}return o}(e,n,t,e.getParentType(),r);for(const[[t,n],r,o]of i){const i=En(n);e.reportError(new GraphQLError(`Fields "${t}" conflict because ${i}. Use different aliases on the fields to fetch both if this was intentional.`,{nodes:r.concat(o)}))}}}},Mn]),Jn=Object.freeze([function(e){const t=e.getSchema(),n=t?.astNode??t?.getQueryType()??t?.getMutationType()??t?.getSubscriptionType();let r=0;return{SchemaDefinition(t){n?e.reportError(new GraphQLError("Cannot define a new schema within a schema extension.",{nodes:t})):(r>0&&e.reportError(new GraphQLError("Must provide only one schema definition.",{nodes:t})),++r)}}},function(e){const t=e.getSchema(),n=Object.create(null),r=t?{query:t.getQueryType(),mutation:t.getMutationType(),subscription:t.getSubscriptionType()}:{};return{SchemaDefinition:i,SchemaExtension:i};function i(t){const i=t.operationTypes??[];for(const t of i){const i=t.operation,o=n[i];r[i]?e.reportError(new GraphQLError(`Type for ${i} already defined in the schema. It cannot be redefined.`,{nodes:t})):o?e.reportError(new GraphQLError(`There can be only one ${i} type in schema.`,{nodes:[o,t]})):n[i]=t}return!1}},function(e){const t=Object.create(null),n=e.getSchema();return{ScalarTypeDefinition:r,ObjectTypeDefinition:r,InterfaceTypeDefinition:r,UnionTypeDefinition:r,EnumTypeDefinition:r,InputObjectTypeDefinition:r};function r(r){const i=r.name.value;if(!n?.getType(i))return t[i]?e.reportError(new GraphQLError(`There can be only one type named "${i}".`,{nodes:[t[i],r.name]})):t[i]=r.name,!1;e.reportError(new GraphQLError(`Type "${i}" already exists in the schema. It cannot also be defined in this type definition.`,{nodes:r.name}))}},function(e){const t=e.getSchema(),n=t?t.getTypeMap():Object.create(null),r=Object.create(null);return{EnumTypeDefinition:i,EnumTypeExtension:i};function i(t){const i=t.name.value;r[i]||(r[i]=Object.create(null));const o=t.values??[],s=r[i];for(const t of o){const r=t.name.value,o=n[i];ke(o)&&o.getValue(r)?e.reportError(new GraphQLError(`Enum value "${i}.${r}" already exists in the schema. It cannot also be defined in this type extension.`,{nodes:t.name})):s[r]?e.reportError(new GraphQLError(`Enum value "${i}.${r}" can only be defined once.`,{nodes:[s[r],t.name]})):s[r]=t.name}return!1}},function(e){const t=e.getSchema(),n=t?t.getTypeMap():Object.create(null),r=Object.create(null);return{InputObjectTypeDefinition:i,InputObjectTypeExtension:i,InterfaceTypeDefinition:i,InterfaceTypeExtension:i,ObjectTypeDefinition:i,ObjectTypeExtension:i};function i(t){const i=t.name.value;r[i]||(r[i]=Object.create(null));const o=t.fields??[],s=r[i];for(const t of o){const r=t.name.value;Pn(n[i],r)?e.reportError(new GraphQLError(`Field "${i}.${r}" already exists in the schema. It cannot also be defined in this type extension.`,{nodes:t.name})):s[r]?e.reportError(new GraphQLError(`Field "${i}.${r}" can only be defined once.`,{nodes:[s[r],t.name]})):s[r]=t.name}return!1}},function(e){return{DirectiveDefinition(e){const t=e.arguments??[];return n(`@${e.name.value}`,t)},InterfaceTypeDefinition:t,InterfaceTypeExtension:t,ObjectTypeDefinition:t,ObjectTypeExtension:t};function t(e){const t=e.name.value,r=e.fields??[];for(const e of r){n(`${t}.${e.name.value}`,e.arguments??[])}return!1}function n(t,n){const r=Qn(n,(e=>e.name.value));for(const[n,i]of r)i.length>1&&e.reportError(new GraphQLError(`Argument "${t}(${n}:)" can only be defined once.`,{nodes:i.map((e=>e.name))}));return!1}},function(e){const t=Object.create(null),n=e.getSchema();return{DirectiveDefinition(r){const i=r.name.value;if(!n?.getDirective(i))return t[i]?e.reportError(new GraphQLError(`There can be only one directive named "@${i}".`,{nodes:[t[i],r.name]})):t[i]=r.name,!1;e.reportError(new GraphQLError(`Directive "@${i}" already exists in the schema. It cannot be redefined.`,{nodes:r.name}))}}},dn,pn,Vn,function(e){const t=e.getSchema(),r=Object.create(null);for(const t of e.getDocument().definitions)cn(t)&&(r[t.name.value]=t);return{ScalarTypeExtension:i,ObjectTypeExtension:i,InterfaceTypeExtension:i,UnionTypeExtension:i,EnumTypeExtension:i,InputObjectTypeExtension:i};function i(i){const o=i.name.value,s=r[o],a=t?.getType(o);let c;if(s?c=Ln[s.kind]:a&&(c=function(e){if(Le(e))return h.SCALAR_TYPE_EXTENSION;if(Ae(e))return h.OBJECT_TYPE_EXTENSION;if(De(e))return h.INTERFACE_TYPE_EXTENSION;if(we(e))return h.UNION_TYPE_EXTENSION;if(ke(e))return h.ENUM_TYPE_EXTENSION;if(xe(e))return h.INPUT_OBJECT_TYPE_EXTENSION;n(!1,"Unexpected type: "+j(e))}(a)),c){if(c!==i.kind){const t=function(e){switch(e){case h.SCALAR_TYPE_EXTENSION:return"scalar";case h.OBJECT_TYPE_EXTENSION:return"object";case h.INTERFACE_TYPE_EXTENSION:return"interface";case h.UNION_TYPE_EXTENSION:return"union";case h.ENUM_TYPE_EXTENSION:return"enum";case h.INPUT_OBJECT_TYPE_EXTENSION:return"input object";default:n(!1,"Unexpected kind: "+j(e))}}(i.kind);e.reportError(new GraphQLError(`Cannot extend non-${t} type "${o}".`,{nodes:s?[s,i]:i}))}}else{const n=se(o,Object.keys({...r,...t?.getTypeMap()}));e.reportError(new GraphQLError(`Cannot extend type "${o}" because it is not defined.`+W(n),{nodes:i.name}))}}},ln,Un,Mn,An]);class ASTValidationContext{constructor(e,t){this._ast=e,this._fragments=void 0,this._fragmentSpreads=new Map,this._recursivelyReferencedFragments=new Map,this._onError=t}get[Symbol.toStringTag](){return"ASTValidationContext"}reportError(e){this._onError(e)}getDocument(){return this._ast}getFragment(e){let t;if(this._fragments)t=this._fragments;else{t=Object.create(null);for(const e of this.getDocument().definitions)e.kind===h.FRAGMENT_DEFINITION&&(t[e.name.value]=e);this._fragments=t}return t[e]}getFragmentSpreads(e){let t=this._fragmentSpreads.get(e);if(!t){t=[];const n=[e];let r;for(;r=n.pop();)for(const e of r.selections)e.kind===h.FRAGMENT_SPREAD?t.push(e):e.selectionSet&&n.push(e.selectionSet);this._fragmentSpreads.set(e,t)}return t}getRecursivelyReferencedFragments(e){let t=this._recursivelyReferencedFragments.get(e);if(!t){t=[];const n=new Set,r=[e.selectionSet];let i;for(;i=r.pop();)for(const e of this.getFragmentSpreads(i)){const i=e.name.value;if(!n.has(i)){n.add(i);const e=this.getFragment(i);e&&(t.push(e),r.push(e.selectionSet))}}this._recursivelyReferencedFragments.set(e,t)}return t}}class SDLValidationContext extends ASTValidationContext{constructor(e,t,n){super(e,n),this._schema=t}get[Symbol.toStringTag](){return"SDLValidationContext"}getSchema(){return this._schema}}class ValidationContext extends ASTValidationContext{constructor(e,t,n,r){super(t,r),this._schema=e,this._typeInfo=n,this._variableUsages=new Map,this._recursiveVariableUsages=new Map}get[Symbol.toStringTag](){return"ValidationContext"}getSchema(){return this._schema}getVariableUsages(e){let t=this._variableUsages.get(e);if(!t){const n=[],r=new TypeInfo(this._schema);fe(e,sn(r,{VariableDefinition:()=>!1,Variable(e){n.push({node:e,type:r.getInputType(),defaultValue:r.getDefaultValue()})}})),t=n,this._variableUsages.set(e,t)}return t}getRecursiveVariableUsages(e){let t=this._recursiveVariableUsages.get(e);if(!t){t=this.getVariableUsages(e);for(const n of this.getRecursivelyReferencedFragments(e))t=t.concat(this.getVariableUsages(n));this._recursiveVariableUsages.set(e,t)}return t}getType(){return this._typeInfo.getType()}getParentType(){return this._typeInfo.getParentType()}getInputType(){return this._typeInfo.getInputType()}getParentInputType(){return this._typeInfo.getParentInputType()}getFieldDef(){return this._typeInfo.getFieldDef()}getDirective(){return this._typeInfo.getDirective()}getArgument(){return this._typeInfo.getArgument()}getEnumValue(){return this._typeInfo.getEnumValue()}}function qn(e,t,n=Yn,r,i=new TypeInfo(e)){const o=r?.maxErrors??100;!function(e){const t=Bt(e);if(0!==t.length)throw new Error(t.map((e=>e.message)).join("\n\n"))}(e);const s=new GraphQLError("Too many validation errors, error limit reached. Validation aborted."),a=[],c=new ValidationContext(e,t,i,(e=>{if(a.length>=o)throw s;a.push(e)})),u=he(n.map((e=>e(c))));try{fe(t,sn(i,u))}catch(e){if(e!==s)throw e;a.push(s)}return a}function Kn(e,t,n=Jn){const r=[],i=new SDLValidationContext(e,t,(e=>{r.push(e)}));return fe(e,he(n.map((e=>e(i))))),r}function Xn(e,n){t(e)&&t(e.__schema)||M(!1,`Invalid or incomplete introspection result. Ensure that you are passing "data" property of introspection response and no "errors" was returned alongside: ${j(e)}.`);const r=e.__schema,i=te(r.types,(e=>e.name),(e=>function(e){if(null!=e&&null!=e.name&&null!=e.kind)switch(e.kind){case Ct.SCALAR:return new GraphQLScalarType({name:(r=e).name,description:r.description,specifiedByURL:r.specifiedByURL});case Ct.OBJECT:return new GraphQLObjectType({name:(n=e).name,description:n.description,interfaces:()=>f(n),fields:()=>h(n)});case Ct.INTERFACE:return new GraphQLInterfaceType({name:(t=e).name,description:t.description,interfaces:()=>f(t),fields:()=>h(t)});case Ct.UNION:return function(e){if(!e.possibleTypes){const t=j(e);throw new Error(`Introspection result missing possibleTypes: ${t}.`)}return new GraphQLUnionType({name:e.name,description:e.description,types:()=>e.possibleTypes.map(p)})}(e);case Ct.ENUM:return function(e){if(!e.enumValues){const t=j(e);throw new Error(`Introspection result missing enumValues: ${t}.`)}return new GraphQLEnumType({name:e.name,description:e.description,values:te(e.enumValues,(e=>e.name),(e=>({description:e.description,deprecationReason:e.deprecationReason})))})}(e);case Ct.INPUT_OBJECT:return function(e){if(!e.inputFields){const t=j(e);throw new Error(`Introspection result missing inputFields: ${t}.`)}return new GraphQLInputObjectType({name:e.name,description:e.description,fields:()=>T(e.inputFields)})}(e)}var t;var n;var r;const i=j(e);throw new Error(`Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: ${i}.`)}(e)));for(const e of[...ft,...Vt])i[e.name]&&(i[e.name]=e);const o=r.queryType?p(r.queryType):null,s=r.mutationType?p(r.mutationType):null,a=r.subscriptionType?p(r.subscriptionType):null,c=r.directives?r.directives.map((function(e){if(!e.args){const t=j(e);throw new Error(`Introspection result missing directive args: ${t}.`)}if(!e.locations){const t=j(e);throw new Error(`Introspection result missing directive locations: ${t}.`)}return new GraphQLDirective({name:e.name,description:e.description,isRepeatable:e.isRepeatable,locations:e.locations.slice(),args:T(e.args)})})):[];return new GraphQLSchema({description:r.description,query:o,mutation:s,subscription:a,types:Object.values(i),directives:c,assumeValid:n?.assumeValid});function u(e){if(e.kind===Ct.LIST){const t=e.ofType;if(!t)throw new Error("Decorated type deeper than introspection query.");return new GraphQLList(u(t))}if(e.kind===Ct.NON_NULL){const t=e.ofType;if(!t)throw new Error("Decorated type deeper than introspection query.");const n=u(t);return new GraphQLNonNull(Pe(n))}return l(e)}function l(e){const t=e.name;if(!t)throw new Error(`Unknown type reference: ${j(e)}.`);const n=i[t];if(!n)throw new Error(`Invalid or incomplete schema, unknown type: ${t}. Ensure that a full introspection query is used in order to build a client schema.`);return n}function p(e){return function(e){if(!Ae(e))throw new Error(`Expected ${j(e)} to be a GraphQL Object type.`);return e}(l(e))}function d(e){return function(e){if(!De(e))throw new Error(`Expected ${j(e)} to be a GraphQL Interface type.`);return e}(l(e))}function f(e){if(null===e.interfaces&&e.kind===Ct.INTERFACE)return[];if(!e.interfaces){const t=j(e);throw new Error(`Introspection result missing interfaces: ${t}.`)}return e.interfaces.map(d)}function h(e){if(!e.fields)throw new Error(`Introspection result missing fields: ${j(e)}.`);return te(e.fields,(e=>e.name),E)}function E(e){const t=u(e.type);if(!Ge(t)){const e=j(t);throw new Error(`Introspection must provide output type for fields, but received: ${e}.`)}if(!e.args){const t=j(e);throw new Error(`Introspection result missing field args: ${t}.`)}return{description:e.description,deprecationReason:e.deprecationReason,type:t,args:T(e.args)}}function T(e){return te(e,(e=>e.name),y)}function y(e){const t=u(e.type);if(!Ce(t)){const e=j(t);throw new Error(`Introspection must provide input type for arguments, but received: ${e}.`)}const n=null!=e.defaultValue?wn(function(e,t){const n=new Parser(e,t);n.expectToken(m.SOF);const r=n.parseValueLiteral(!1);return n.expectToken(m.EOF),r}(e.defaultValue),t):void 0;return{description:e.description,type:t,defaultValue:n,deprecationReason:e.deprecationReason}}}function zn(e,t,n){Mt(e),!0!==n?.assumeValid&&!0!==n?.assumeValidSDL&&function(e,t){const n=Kn(e,t);if(0!==n.length)throw new Error(n.map((e=>e.message)).join("\n\n"))}(t,e);const r=e.toConfig(),i=Hn(r,t,n);return r===i?e:new GraphQLSchema(i)}function Hn(e,t,r){const i=[],o=new AccumulatorMap,s=new AccumulatorMap,a=new AccumulatorMap,c=new AccumulatorMap,u=new AccumulatorMap,l=new AccumulatorMap,p=[];let d;const f=[];let m=!1;for(const e of t.definitions){switch(e.kind){case h.SCHEMA_DEFINITION:d=e;break;case h.SCHEMA_EXTENSION:f.push(e);break;case h.DIRECTIVE_DEFINITION:p.push(e);break;case h.SCALAR_TYPE_DEFINITION:case h.OBJECT_TYPE_DEFINITION:case h.INTERFACE_TYPE_DEFINITION:case h.UNION_TYPE_DEFINITION:case h.ENUM_TYPE_DEFINITION:case h.INPUT_OBJECT_TYPE_DEFINITION:i.push(e);break;case h.SCALAR_TYPE_EXTENSION:o.add(e.name.value,e);break;case h.OBJECT_TYPE_EXTENSION:s.add(e.name.value,e);break;case h.INTERFACE_TYPE_EXTENSION:a.add(e.name.value,e);break;case h.UNION_TYPE_EXTENSION:c.add(e.name.value,e);break;case h.ENUM_TYPE_EXTENSION:u.add(e.name.value,e);break;case h.INPUT_OBJECT_TYPE_EXTENSION:l.add(e.name.value,e);break;default:continue}m=!0}if(!m)return e;const E=Object.create(null);for(const t of e.types)E[t.name]=v(t);for(const e of i){const t=e.name.value;E[t]=Wn[t]??x(e)}const T={query:e.query&&N(e.query),mutation:e.mutation&&N(e.mutation),subscription:e.subscription&&N(e.subscription),...d&&_([d]),..._(f)};return{description:d?.description?.value,...T,types:Object.values(E),directives:[...e.directives.map((function(e){if(Ot(e))return e;const t=e.toConfig();return new GraphQLDirective({...t,args:ne(t.args,g)})})),...p.map((function(e){return new GraphQLDirective({name:e.name.value,description:e.description?.value,locations:e.locations.map((({value:e})=>e)),isRepeatable:e.repeatable,args:L(e.arguments),astNode:e})}))],extensions:Object.create(null),astNode:d??e.astNode,extensionASTNodes:e.extensionASTNodes.concat(f),assumeValid:r?.assumeValid??!1};function y(e){return Fe(e)?new GraphQLList(y(e.ofType)):Re(e)?new GraphQLNonNull(y(e.ofType)):N(e)}function N(e){return E[e.name]}function v(e){return Pt(e)||ht(e)?e:Le(e)?function(e){const t=e.toConfig(),n=o.get(t.name)??[];let r=t.specifiedByURL;for(const e of n)r=er(e)??r;return new GraphQLScalarType({...t,specifiedByURL:r,extensionASTNodes:t.extensionASTNodes.concat(n)})}(e):Ae(e)?function(e){const t=e.toConfig(),n=s.get(t.name)??[];return new GraphQLObjectType({...t,interfaces:()=>[...e.getInterfaces().map(N),...w(n)],fields:()=>({...ne(t.fields,I),...b(n)}),extensionASTNodes:t.extensionASTNodes.concat(n)})}(e):De(e)?function(e){const t=e.toConfig(),n=a.get(t.name)??[];return new GraphQLInterfaceType({...t,interfaces:()=>[...e.getInterfaces().map(N),...w(n)],fields:()=>({...ne(t.fields,I),...b(n)}),extensionASTNodes:t.extensionASTNodes.concat(n)})}(e):we(e)?function(e){const t=e.toConfig(),n=c.get(t.name)??[];return new GraphQLUnionType({...t,types:()=>[...e.getTypes().map(N),...k(n)],extensionASTNodes:t.extensionASTNodes.concat(n)})}(e):ke(e)?function(e){const t=e.toConfig(),n=u.get(e.name)??[];return new GraphQLEnumType({...t,values:{...t.values,...D(n)},extensionASTNodes:t.extensionASTNodes.concat(n)})}(e):xe(e)?function(e){const t=e.toConfig(),n=l.get(t.name)??[];return new GraphQLInputObjectType({...t,fields:()=>({...ne(t.fields,(e=>({...e,type:y(e.type)}))),...A(n)}),extensionASTNodes:t.extensionASTNodes.concat(n)})}(e):void n(!1,"Unexpected type: "+j(e))}function I(e){return{...e,type:y(e.type),args:e.args&&ne(e.args,g)}}function g(e){return{...e,type:y(e.type)}}function _(e){const t={};for(const n of e){const e=n.operationTypes??[];for(const n of e)t[n.operation]=S(n.type)}return t}function S(e){const t=e.name.value,n=Wn[t]??E[t];if(void 0===n)throw new Error(`Unknown type: "${t}".`);return n}function O(e){return e.kind===h.LIST_TYPE?new GraphQLList(O(e.type)):e.kind===h.NON_NULL_TYPE?new GraphQLNonNull(O(e.type)):S(e)}function b(e){const t=Object.create(null);for(const n of e){const e=n.fields??[];for(const n of e)t[n.name.value]={type:O(n.type),description:n.description?.value,args:L(n.arguments),deprecationReason:Zn(n),astNode:n}}return t}function L(e){const t=e??[],n=Object.create(null);for(const e of t){const t=O(e.type);n[e.name.value]={type:t,description:e.description?.value,defaultValue:wn(e.defaultValue,t),deprecationReason:Zn(e),astNode:e}}return n}function A(e){const t=Object.create(null);for(const n of e){const e=n.fields??[];for(const n of e){const e=O(n.type);t[n.name.value]={type:e,description:n.description?.value,defaultValue:wn(n.defaultValue,e),deprecationReason:Zn(n),astNode:n}}}return t}function D(e){const t=Object.create(null);for(const n of e){const e=n.values??[];for(const n of e)t[n.name.value]={description:n.description?.value,deprecationReason:Zn(n),astNode:n}}return t}function w(e){return e.flatMap((e=>e.interfaces?.map(S)??[]))}function k(e){return e.flatMap((e=>e.types?.map(S)??[]))}function x(e){const t=e.name.value;switch(e.kind){case h.OBJECT_TYPE_DEFINITION:{const n=s.get(t)??[],r=[e,...n];return new GraphQLObjectType({name:t,description:e.description?.value,interfaces:()=>w(r),fields:()=>b(r),astNode:e,extensionASTNodes:n})}case h.INTERFACE_TYPE_DEFINITION:{const n=a.get(t)??[],r=[e,...n];return new GraphQLInterfaceType({name:t,description:e.description?.value,interfaces:()=>w(r),fields:()=>b(r),astNode:e,extensionASTNodes:n})}case h.ENUM_TYPE_DEFINITION:{const n=u.get(t)??[],r=[e,...n];return new GraphQLEnumType({name:t,description:e.description?.value,values:D(r),astNode:e,extensionASTNodes:n})}case h.UNION_TYPE_DEFINITION:{const n=c.get(t)??[],r=[e,...n];return new GraphQLUnionType({name:t,description:e.description?.value,types:()=>k(r),astNode:e,extensionASTNodes:n})}case h.SCALAR_TYPE_DEFINITION:{const n=o.get(t)??[];return new GraphQLScalarType({name:t,description:e.description?.value,specifiedByURL:er(e),astNode:e,extensionASTNodes:n})}case h.INPUT_OBJECT_TYPE_DEFINITION:{const n=l.get(t)??[],r=[e,...n];return new GraphQLInputObjectType({name:t,description:e.description?.value,fields:()=>A(r),astNode:e,extensionASTNodes:n})}}}}const Wn=ee([...ft,...Vt],(e=>e.name));function Zn(e){return xn(gt,e)?.reason}function er(e){return xn(_t,e)?.url}function tr(e,t){!0!==t?.assumeValid&&!0!==t?.assumeValidSDL&&function(e){const t=Kn(e);if(0!==t.length)throw new Error(t.map((e=>e.message)).join("\n\n"))}(e);const n=Hn({description:void 0,types:[],directives:[],extensions:Object.create(null),extensionASTNodes:[],assumeValid:!1},e,t);if(null==n.astNode)for(const e of n.types)switch(e.name){case"Query":n.query=e;break;case"Mutation":n.mutation=e;break;case"Subscription":n.subscription=e}const r=[...n.directives,...St.filter((e=>n.directives.every((t=>t.name!==e.name))))];return new GraphQLSchema({...n,directives:r})}function nr(e){return function(e,t,r){const i=e.getDirectives().filter(t),o=Object.values(e.getTypeMap()).filter(r);return[ir(e),...i.map((e=>function(e){return pr(e)+"directive @"+e.name+cr(e.args)+(e.isRepeatable?" repeatable":"")+" on "+e.locations.join(" | ")}(e))),...o.map((e=>function(e){if(Le(e))return function(e){return pr(e)+`scalar ${e.name}`+function(e){if(null==e.specifiedByURL)return"";return` @specifiedBy(url: ${Ee({kind:h.STRING,value:e.specifiedByURL})})`}(e)}(e);if(Ae(e))return function(e){return pr(e)+`type ${e.name}`+or(e)+sr(e)}(e);if(De(e))return function(e){return pr(e)+`interface ${e.name}`+or(e)+sr(e)}(e);if(we(e))return function(e){const t=e.getTypes(),n=t.length?" = "+t.join(" | "):"";return pr(e)+"union "+e.name+n}(e);if(ke(e))return function(e){const t=e.getValues().map(((e,t)=>pr(e,"  ",!t)+"  "+e.name+lr(e.deprecationReason)));return pr(e)+`enum ${e.name}`+ar(t)}(e);if(xe(e))return function(e){const t=Object.values(e.getFields()).map(((e,t)=>pr(e,"  ",!t)+"  "+ur(e)));return pr(e)+`input ${e.name}`+ar(t)}(e);n(!1,"Unexpected type: "+j(e))}(e)))].filter(Boolean).join("\n\n")}(e,(e=>!Ot(e)),rr)}function rr(e){return!ht(e)&&!Pt(e)}function ir(e){if(null==e.description&&function(e){const t=e.getQueryType();if(t&&"Query"!==t.name)return!1;const n=e.getMutationType();if(n&&"Mutation"!==n.name)return!1;const r=e.getSubscriptionType();if(r&&"Subscription"!==r.name)return!1;return!0}(e))return;const t=[],n=e.getQueryType();n&&t.push(`  query: ${n.name}`);const r=e.getMutationType();r&&t.push(`  mutation: ${r.name}`);const i=e.getSubscriptionType();return i&&t.push(`  subscription: ${i.name}`),pr(e)+`schema {\n${t.join("\n")}\n}`}function or(e){const t=e.getInterfaces();return t.length?" implements "+t.map((e=>e.name)).join(" & "):""}function sr(e){return ar(Object.values(e.getFields()).map(((e,t)=>pr(e,"  ",!t)+"  "+e.name+cr(e.args,"  ")+": "+String(e.type)+lr(e.deprecationReason))))}function ar(e){return 0!==e.length?" {\n"+e.join("\n")+"\n}":""}function cr(e,t=""){return 0===e.length?"":e.every((e=>!e.description))?"("+e.map(ur).join(", ")+")":"(\n"+e.map(((e,n)=>pr(e,"  "+t,!n)+"  "+t+ur(e))).join("\n")+"\n"+t+")"}function ur(e){const t=bt(e.defaultValue,e.type);let n=e.name+": "+String(e.type);return t&&(n+=` = ${Ee(t)}`),n+lr(e.deprecationReason)}function lr(e){if(null==e)return"";if(e!==It){return` @deprecated(reason: ${Ee({kind:h.STRING,value:e})})`}return" @deprecated"}function pr(e,t="",n=!0){const{description:r}=e;if(null==r)return"";return(t&&!n?"\n"+t:t)+Ee({kind:h.STRING,value:r,block:_(r)}).replace(/\n/g,"\n"+t)+"\n"}function dr(e){const t=[];for(const n of e)t.push(...n.definitions);return{kind:h.DOCUMENT,definitions:t}}const fr=[hn];function hr(e){var t;const n=function(e){if(e)return function(t){const n=e;return{Field(e){var r;const i=(null!==(r=e.alias)&&void 0!==r?r:e.name).value,o=i.charAt(0).toLowerCase()+i.slice(1);n.includes(o)&&t.reportError(new GraphQLError(`Field name "${i}" is not allowed because it conflicts with generated object APIs. Please use an alias to change the field name.`,{nodes:e}))}}};return}(null===(t=e.disallowedFieldNames)||void 0===t?void 0:t.allFields),r=function(e){if(e)return function(t){const n=e;return{VariableDefinition(e){const r=e.variable.name.value,i=r.charAt(0).toLowerCase()+r.slice(1);n.includes(i)&&t.reportError(new GraphQLError(`Input Parameter name "${r}" is not allowed because it conflicts with generated object APIs.`,{nodes:e}))}}};return}(e.disallowedInputParameterNames);return[mr,Er,...n?[n]:[],...r?[r]:[],...Yn.filter((e=>!fr.includes(e)))]}function mr(e){return{OperationDefinition:t=>(t.name||e.reportError(new GraphQLError("Apollo does not support anonymous operations because operation names are used during code generation. Please give this operation a name.",{nodes:t})),!1)}}function Er(e){return{Field(t){"__typename"==(t.alias&&t.alias.value)&&e.reportError(new GraphQLError("Apollo needs to be able to insert __typename when needed, so using it as an alias is not supported.",{nodes:t}))}}}const Tr={kind:h.DIRECTIVE_DEFINITION,description:(yr="A directive used by the Apollo iOS client to annotate operations or fragments that should be used exclusively for generating local cache mutations instead of as standard operations.",{kind:h.STRING,value:yr}),name:Nr("apollo_client_ios_localCacheMutation"),repeatable:!1,locations:[Nr("QUERY"),Nr("MUTATION"),Nr("SUBSCRIPTION"),Nr("FRAGMENT_DEFINITION")]};var yr;function Nr(e){return{kind:h.NAME,value:e}}const vr={kind:h.DOCUMENT,definitions:[Tr]};const Ir={kind:h.FIELD,name:{kind:h.NAME,value:"__typename"}};class GraphQLSchemaValidationError extends Error{constructor(e){super(e.map((e=>e.message)).join("\n\n")),this.validationErrors=e,this.name="GraphQLSchemaValidationError"}}function gr(e){return e.startsWith("__")}const _r={kind:h.FIELD,name:{kind:h.NAME,value:"__typename"}};function Sr(e,t){return t&&(e=function(e){return fe(e,{enter:e=>e.kind!==h.SELECTION_SET?void 0:{...e,selections:e.selections.filter((e=>!("Field"===e.kind&&"__typename"===e.name.value)))},leave(e){if((e.kind===h.FIELD||e.kind===h.FRAGMENT_DEFINITION||e.kind===h.INLINE_FRAGMENT)&&e.selectionSet)return{...e,selectionSet:{...e.selectionSet,selections:[Ir,...e.selectionSet.selections]}}}})}(e)),fe(e,{SelectionSet:{leave:(e,t,n)=>p(n)&&![h.FIELD,h.FRAGMENT_DEFINITION].includes(n.kind)?e:function(e){return e.selections.find((e=>e.kind==_r.kind&&e.name.value==_r.name.value))?e:{...e,selections:[_r,...e.selections]}}(e)},Field:{enter:e=>function(e){return e.name.value==_r.name.value?{...e,alias:void 0,directives:void 0}:e}(e)},Directive:{enter:e=>function(e){return e.name.value==Tr.name.value?null:e}(e)}})}function Or(e){return null!=e}function br(e){switch(e.kind){case h.VARIABLE:return{kind:e.kind,value:e.name.value};case h.LIST:return{kind:e.kind,value:e.values.map(br)};case h.OBJECT:return{kind:e.kind,value:e.fields.reduce(((e,t)=>(e[t.name.value]=br(t.value),e)),{})};default:return e}}function Lr(e){var t,n;return null===(n=null===(t=e.loc)||void 0===t?void 0:t.source)||void 0===n?void 0:n.name}function Ar(e,t,n,r){var i,o,s;const a=new Map;for(const e of t.definitions)e.kind===h.FRAGMENT_DEFINITION&&a.set(e.name.value,e);const c=[],u=new Map,l=new Set,p=e.getQueryType();if(void 0===p)throw new GraphQLError("GraphQL Schema must contain a 'query' root type definition.",{});const d={queryType:p,mutationType:null!==(i=e.getMutationType())&&void 0!==i?i:void 0,subscriptionType:null!==(o=e.getSubscriptionType())&&void 0!==o?o:void 0};for(const e of t.definitions)e.kind===h.OPERATION_DEFINITION&&c.push(m(e));for(const[e,t]of a.entries())u.set(e,E(t));return{rootTypes:d,operations:c,fragments:Array.from(u.values()),referencedTypes:Array.from(l.values()),schemaDocumentation:null!==(s=e.description)&&void 0!==s?s:void 0};function f(t){if(!l.has(t)){if(l.add(t),De(t))for(const n of e.getPossibleTypes(t))f(Be(n));if(we(t)){const e=t.getTypes();for(t of e)f(Be(t))}if(xe(t)&&function(e){const t=e.getFields();for(const e in t){f(Be(t[e].type))}}(t),Ae(t))for(const e of t.getInterfaces())f(Be(e))}}function m(t){var r;if(!t.name)throw new GraphQLError("Operations should be named",{nodes:t});const i=Lr(t),o=t.name.value,s=t.operation,a=(t.variableDefinitions||[]).map((t=>{const n=t.variable.name.value,r=t.defaultValue?br(t.defaultValue):void 0,i=rn(e,t.type);if(!i)throw new GraphQLError(`Couldn't get type from type node "${t.type}"`,{nodes:t});return f(Be(i)),{name:n,type:i,defaultValue:r}})),c=Ee(Sr(t,n)),u=e.getRootType(s),[l]=null!==(r=N(t.directives))&&void 0!==r?r:[void 0,void 0];return f(u),{name:o,operationType:s,variables:a,rootType:u,selectionSet:T(t.selectionSet,u),directives:l,source:c,filePath:i}}function E(t){var r;const i=t.name.value,o=Lr(t),s=Ee(Sr(t,n)),a=rn(e,t.typeCondition),[c]=null!==(r=N(t.directives))&&void 0!==r?r:[void 0,void 0];return f(Be(a)),{name:i,filePath:o,source:s,typeCondition:a,selectionSet:T(t.selectionSet,a),directives:c}}function T(t,n){return{parentType:n,selections:t.selections.map((t=>function(t,n){var i,o,s,c;const[l,p]=null!==(i=N(t.directives))&&void 0!==i?i:[void 0,void 0];switch(t.kind){case h.FIELD:{const i=t.name.value;if("__typename"==i)return;const a=null===(o=t.alias)||void 0===o?void 0:o.value,u=function(e,t,n){return n===$t.name&&e.getQueryType()===t?$t:n===Qt.name&&e.getQueryType()===t?Qt:n===Ut.name&&(Ae(t)||De(t)||we(t))?Ut:Ae(t)||De(t)?t.getFields()[n]:void 0}(e,n,i);if(!u)throw new GraphQLError(`Cannot query field "${i}" on type "${String(n)}"`,{nodes:t});const d=u.type,h=Be(u.type);f(Be(h));const{description:m,deprecationReason:E}=u;let N={kind:"Field",name:i,alias:a,type:d,arguments:y(u,t.arguments),inclusionConditions:p,description:!gr(i)&&m?m:void 0,deprecationReason:E||void 0,directives:l};function v(e,t,n){var r;if(t&&n){const i=(null!==(r=e.alias)&&void 0!==r?r:e.name).value,o=i.charAt(0).toLowerCase()+i.slice(1);if(null==t?void 0:t.includes(o))throw new GraphQLError(`Schema name "${n}" conflicts with name of a generated object API. Please choose a different schema name. Suggestions: "${n}Schema", "${n}GraphQL", "${n}API"`,{nodes:e})}}if(Fe(d)||Re(d)&&Fe(d.ofType)?v(t,null===(s=r.disallowedFieldNames)||void 0===s?void 0:s.entityList,r.schemaNamespace):Qe(h)&&v(t,null===(c=r.disallowedFieldNames)||void 0===c?void 0:c.entity,r.schemaNamespace),Qe(h)){const e=t.selectionSet;if(!e)throw new GraphQLError(`Composite field "${i}" on type "${String(n)}" requires selection set`,{nodes:t});N.selectionSet=T(e,h)}return N}case h.INLINE_FRAGMENT:{const r=t.typeCondition,i=r?rn(e,r):n;return f(i),{kind:"InlineFragment",selectionSet:T(t.selectionSet,i),inclusionConditions:p,directives:l}}case h.FRAGMENT_SPREAD:{const e=t.name.value,n=function(e){let t=u.get(e);if(t)return t;const n=a.get(e);return n?(a.delete(e),t=E(n),u.set(e,t),t):void 0}(e);if(!n)throw new GraphQLError(`Unknown fragment "${e}".`,{nodes:t.name});return{kind:"FragmentSpread",fragment:n,inclusionConditions:p,directives:l}}}}(t,n))).filter(Or)}}function y(...e){const t=e[0].args;return e[1]&&e[1].length>0?e[1].map((e=>{var n;const r=e.name.value,i=t.find((t=>t.name===e.name.value)),o=null==i?void 0:i.type;if(!o)throw new GraphQLError(`Cannot find directive argument type for argument "${r}".`,{nodes:[e]});return{name:r,value:br(e.value),type:o,deprecationReason:null!==(n=i.deprecationReason)&&void 0!==n?n:void 0}})):void 0}function N(t){if(t&&t.length>0){const n=[],r=[];for(const i of t){const t=i.name.value,o=e.getDirective(t);if(!o)throw new GraphQLError(`Cannot find directive "${t}".`,{nodes:i});n.push({name:t,arguments:y(o,i.arguments)});const s=v(i,o);s&&r.push(s)}return[n,r.length>0?r:void 0]}}function v(e,t){var n;if("include"==t.name||"skip"==t.name){const r=null===(n=e.arguments)||void 0===n?void 0:n[0].value,i="skip"==t.name;switch(null==r?void 0:r.kind){case h.BOOLEAN:return i?r.value?"SKIPPED":"INCLUDED":r.value?"INCLUDED":"SKIPPED";case h.VARIABLE:return{variable:r.name.value,isInverted:i};default:throw new GraphQLError('Conditional inclusion directive has invalid "if" argument.',{nodes:e})}}}}return e.GraphQLEnumType=GraphQLEnumType,e.GraphQLError=GraphQLError,e.GraphQLInputObjectType=GraphQLInputObjectType,e.GraphQLInterfaceType=GraphQLInterfaceType,e.GraphQLObjectType=GraphQLObjectType,e.GraphQLScalarType=GraphQLScalarType,e.GraphQLSchema=GraphQLSchema,e.GraphQLSchemaValidationError=GraphQLSchemaValidationError,e.GraphQLUnionType=GraphQLUnionType,e.Source=Source,e.compileDocument=function(e,t,n,r){return Ar(e,t,n,r)},e.loadSchemaFromSources=function(e){var t,n=new Array;for(const r of e)if(r.name.endsWith(".json")){if(t)throw new Error(`Schema search paths can only include one JSON schema definition.\n        Found "${t.name} & "${r.name}".`);t=r}else n.push(J(r));var r=function(e){return e.definitions.some((e=>e.kind==h.DIRECTIVE_DEFINITION&&e.name.value==Tr.name.value))?e:dr([e,vr])}(dr(n));t||function(e){const t=Kn(e);if(0!==t.length)throw new GraphQLSchemaValidationError(t)}(r);const i=t?zn(function(e){let t=JSON.parse(e);t.data&&(t=t.data);return Xn(t)}(t.body),r,{assumeValid:!0,assumeValidSDL:!0}):tr(r,{assumeValid:!0,assumeValidSDL:!0});return function(e){const t=Bt(e);if(0!==t.length)throw new GraphQLSchemaValidationError(t)}(i),i},e.mergeDocuments=function(e){return dr(e)},e.parseOperationDocument=function(e,t){return J(e,{experimentalClientControlledNullability:t})},e.printSchemaToSDL=function(e){return nr(e)},e.validateDocument=function(e,t,n){return qn(e,t,hr(n))},Object.defineProperty(e,"__esModule",{value:!0}),e}({});"#